{"version":3,"sources":["components/ui/Modal/Modal.tsx","components/modals/TransactionInfoModals/common/styled.ts","components/modals/TransactionConfirmModal/common/styled.ts","components/common/TransactionDetails/TransactionDetails.tsx","components/modals/TransactionConfirmModal/Send/Send.tsx","components/modals/TransactionInfoModals/common/DateHeader/DateHeader.tsx","components/modals/TransactionInfoModals/common/SolanaExplorerLink/SolanaExplorerLink.tsx","components/modals/TransactionInfoModals/common/TransactionProgress/TransactionProgress.tsx","components/modals/TransactionInfoModals/TransactionStatusSendModal/TransactionStatusSendModal.tsx"],"names":["easing","BezierEasing","AnimatedDialogContent","animated","StyledDialogContent","props","mobile","Handle","Header","Delimiter","IconWrapper","IconStyled","Title","Description","CloseIcon","Content","Footer","Modal","children","useState","isMobile","useIsMobile","location","useLocation","currentPath","useRef","useEffect","close","doNotCloseOnPathChangeMobile","setIsOpen","config","useMemo","duration","t","from","transform","enter","leave","fadeTransition","useTransition","isOpen","useSpring","y","mass","tension","friction","bind","useDrag","state","set","item","style","n","className","title","description","name","onClick","noDelimiter","classNames","hasIcon","Boolean","iconName","footer","StatusColors","WrapperModal","ProgressWrapper","BlockWrapper","OtherIcon","Desc","CloseWrapper","TransactionLabel","SendWrapper","ValueCurrency","ValueOriginal","SwapWrapper","SwapColumn","SwapInfo","SwapBlock","SwapIcon","SwapAmount","FieldsWrapper","FieldWrapper","FieldTitle","FieldValue","ShareIcon","ShareWrapper","ButtonExplorer","Section","FieldInfo","WalletIcon","InfoWrapper","InfoTitle","Username","To","InfoValue","Subtitle","Wrapper","FromToWrapper","Overlay","TokenAndUsd","TransactionDetails","amount","useFreeTransactions","useSettings","settings","titleBottomName","titleBottomValue","sendState","open","noContentPadding","prefix","postfix","tokenName","userFreeFeeLimits","networkFees","ArrowWrapper","ArrowIconWrapper","ArrowIcon","Send","btcAddress","address","params","isFullName","test","symbol","size","value","medium","Time","DateHeaderWrapper","DateHeader","today","utcDiff","dayjs","GoToExplorerIcon","GoToExplorerLink","SolanaExplorerLink","href","getExplorerUrl","target","rel","trackEventUniversal","isDisabled","signature","ProgressIcon","TransactionStatus","TransactionBadge","ProgressLine","ProgressStub","zIndexes","TransactionProgress","newProgress","timerId","setInterval","setProgress","progress","clearTimeout","width","isSuccess","isError","isProcessing","executing","renderStatus","INITIAL_PROGRESS","DEFAULT_TRANSACTION_ERROR","TransactionStatusSendModal","provider","useWallet","network","useConnectionContext","transaction","useTransaction","executeAction","a","setIsExecuting","action","resultSignature","setSignature","transferNotification","header","text","Error","type","ToastManager","setTransactionError","mount","commitment","trx","transactionError","setTimeout","shortAddress","handleCloseClick","trackEvent","transactionConfirmed","isExecuting","label","amplitudeAction","data"],"mappings":"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","file":"static/js/1.49b1ebc4.chunk.js","sourcesContent":["import type { FunctionComponent } from 'react';\nimport * as React from 'react';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { animated, useSpring, useTransition } from 'react-spring';\n\nimport { styled } from '@linaria/react';\nimport { theme, up, useIsMobile } from '@p2p-wallet-web/ui';\nimport { DialogContent } from '@reach/dialog';\nimport { useDrag } from '@use-gesture/react';\nimport BezierEasing from 'bezier-easing';\nimport classNames from 'classnames';\n\nimport { Icon } from 'components/ui';\n\n// eslint-disable-next-line @typescript-eslint/no-magic-numbers\nconst easing = BezierEasing(0.7, -0.4, 0.4, 1.4);\n\nconst AnimatedDialogContent = animated(DialogContent);\n\nconst DRAG_MOVEMENT_THRESHOLD = 300;\nconst DRAG_VELOCITY_THRESHOLD = 3;\n\nconst StyledDialogContent = styled(({ ...props }) => <AnimatedDialogContent {...props} />)`\n  max-height: calc(100vh - 80px);\n\n  overflow-y: ${({ mobile }) => (mobile ? 'scroll' : 'hidden')};\n\n  &[data-reach-dialog-content] {\n    position: fixed;\n    right: 0;\n\n    display: flex;\n    flex-direction: column;\n    align-self: flex-end;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    overflow-x: hidden;\n    overflow-y: scroll;\n\n    background: ${theme.colors.bg.primary};\n    border-radius: 18px 18px 0 0;\n\n    touch-action: none;\n\n    ${up.tablet} {\n      position: relative;\n      right: unset;\n      bottom: unset;\n\n      align-self: center;\n      width: unset;\n      height: unset;\n      margin: 0;\n\n      border-radius: 12px;\n    }\n  }\n\n  &:focus-visible {\n    outline: none;\n  }\n`;\n\nconst Handle = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 16px;\n\n  &::before {\n    position: absolute;\n\n    width: 31px;\n    height: 4px;\n\n    background: ${theme.colors.textIcon.buttonDisabled};\n\n    content: '';\n  }\n`;\n\nconst Header = styled.div`\n  position: relative;\n\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  min-height: 74px;\n`;\n\nconst Delimiter = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &.hasIcon {\n    height: 44px;\n\n    ${up.tablet} {\n      height: 56px;\n    }\n  }\n\n  &::before {\n    position: absolute;\n\n    width: 100%;\n    height: 1px;\n\n    background: ${theme.colors.stroke.secondary};\n\n    content: '';\n  }\n`;\n\nconst IconWrapper = styled.div`\n  z-index: 1;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 44px;\n  height: 44px;\n\n  border-radius: 12px;\n\n  ${up.tablet} {\n    width: 56px;\n    height: 56px;\n  }\n\n  &.warning {\n    background: ${theme.colors.system.warningMain};\n  }\n`;\n\nconst IconStyled = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.buttonPrimary};\n\n  ${up.tablet} {\n    width: 32px;\n    height: 32px;\n  }\n`;\n\nconst Title = styled.div`\n  color: ${theme.colors.textIcon.primary};\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 140%;\n  letter-spacing: 0.01em;\n`;\n\nconst Description = styled.div`\n  color: ${theme.colors.textIcon.secondary};\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 120%;\n  letter-spacing: 0.01em;\n`;\n\nconst CloseIcon = styled(Icon)`\n  position: absolute;\n  top: 25px;\n  right: 20px;\n\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.active};\n\n  cursor: pointer;\n`;\n\nexport const Content = styled.div`\n  padding: 0 16px;\n\n  ${up.tablet} {\n    padding: 0 20px;\n  }\n`;\n\nconst Footer = styled.div`\n  display: grid;\n  grid-auto-flow: row;\n  grid-gap: 16px;\n  margin-bottom: 16px;\n  padding: 0 16px;\n\n  ${up.tablet} {\n    grid-auto-flow: column;\n    padding: 20px;\n  }\n`;\n\nexport type ModalProps = {\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  footer?: React.ReactNode;\n  iconName?: string;\n  iconBgClassName?: string;\n\n  noDelimiter?: boolean;\n  close: () => void;\n  doNotCloseOnPathChangeMobile?: boolean;\n  className?: string;\n};\n\nexport const Modal: FunctionComponent<ModalProps> = ({\n  title,\n  description,\n  footer,\n  iconName,\n  iconBgClassName,\n\n  noDelimiter,\n  close,\n  doNotCloseOnPathChangeMobile,\n  className,\n\n  children,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const isMobile = useIsMobile();\n  const location = useLocation();\n  const currentPath = useRef(location.pathname);\n\n  useEffect(() => {\n    if (isMobile && !doNotCloseOnPathChangeMobile && currentPath.current !== location.pathname) {\n      close();\n    }\n  }, [isMobile, doNotCloseOnPathChangeMobile, location.pathname]);\n\n  useEffect(() => {\n    setIsOpen(true);\n\n    return () => {\n      setIsOpen(false);\n    };\n  }, []);\n\n  const config = useMemo(() => {\n    if (isMobile) {\n      return {\n        config: { duration: 600, easing: (t: number) => easing(t) },\n        from: { transform: 'translateY(100px)' },\n        enter: { transform: 'translateX(0)' },\n        leave: { transform: 'translateY(100px)' },\n      };\n    }\n\n    return {\n      // config: { duration: 600, easing: (t: number) => easing(t) },\n      // from: { transform: 'translateX(422px)' },\n      // enter: { transform: 'translateX(0)' },\n      // leave: { transform: 'translateX(422px)' },\n    };\n  }, [isMobile]);\n\n  const fadeTransition = useTransition(isOpen, null, config);\n\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: { mass: 1, tension: 210, friction: 20 } }));\n  const bind = useDrag((state) => {\n    set({\n      y: state.down ? state.movement[1] : 0,\n    });\n    if (\n      state.movement[1] > DRAG_MOVEMENT_THRESHOLD ||\n      (state.velocity[1] > DRAG_VELOCITY_THRESHOLD && state.direction[1] > 0)\n    ) {\n      close();\n    }\n  });\n\n  return (\n    <>\n      {fadeTransition.map(\n        ({ item, key, props }) =>\n          item && (\n            <StyledDialogContent\n              key={key}\n              {...(isMobile\n                ? {\n                    ...bind(),\n                    style: {\n                      ...props,\n                      transform: y.interpolate((n) => `translateY(${(n as number) > 0 ? n : 0}px)`),\n                    },\n                  }\n                : {\n                    style: props,\n                  })}\n              aria-label=\"dialog\"\n              className={className}\n            >\n              {isMobile ? <Handle /> : undefined}\n              {title || description ? (\n                <Header>\n                  {title ? <Title>{title}</Title> : undefined}\n                  {description ? <Description>{description}</Description> : undefined}\n                  {!isMobile ? <CloseIcon name=\"cross\" onClick={close} /> : undefined}\n                </Header>\n              ) : undefined}\n              {!noDelimiter ? (\n                <Delimiter className={classNames({ hasIcon: Boolean(iconName) })}>\n                  {iconName ? (\n                    <IconWrapper className={iconBgClassName}>\n                      <IconStyled name={iconName} />\n                    </IconWrapper>\n                  ) : undefined}\n                </Delimiter>\n              ) : undefined}\n              {children ? <Content>{children}</Content> : undefined}\n              {footer ? <Footer>{footer}</Footer> : undefined}\n            </StyledDialogContent>\n          ),\n      )}\n    </>\n  );\n};\n","import { styled } from '@linaria/react';\nimport { theme, up, zIndexes } from '@p2p-wallet-web/ui';\n\nimport { Button, Icon } from 'components/ui';\nimport { Content as ModalContent, Modal } from 'components/ui/Modal';\n\nexport const StatusColors = styled.div`\n  &.isProcessing {\n    background: ${theme.colors.system.warningMain};\n  }\n\n  &.isSuccess {\n    background: ${theme.colors.system.successMain};\n  }\n\n  &.isError {\n    background: ${theme.colors.system.errorMain};\n  }\n`;\n\nexport const WrapperModal = styled(Modal)`\n  display: flex;\n  flex-direction: column;\n  justify-content: stretch;\n  padding: 0;\n  overflow: scroll;\n\n  background: ${theme.colors.bg.primary};\n\n  border-radius: 15px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);\n\n  ${ModalContent} {\n    ${up.tablet} {\n      width: 524px;\n    }\n\n    padding: 0;\n  }\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const ProgressWrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 55px;\n`;\n\nexport const BlockWrapper = styled(StatusColors)`\n  z-index: ${zIndexes.top};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 55px;\n  height: 55px;\n\n  border-radius: 40%;\n`;\n\nexport const OtherIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.buttonPrimary};\n`;\n\nexport const Header = styled.div`\n  position: relative;\n\n  color: ${theme.colors.textIcon.primary};\n  font-weight: 500;\n  font-size: 24px;\n  font-style: normal;\n  line-height: 140%;\n  text-align: center;\n`;\n\nexport const Title = styled.div`\n  margin-bottom: 10px;\n\n  color: #000;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 100%;\n  text-transform: capitalize;\n`;\n\nexport const Desc = styled.div`\n  color: ${theme.colors.bg.buttonDisabled};\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 100%;\n`;\n\nexport const CloseWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n\n  color: ${theme.colors.bg.buttonPrimary};\n\n  border-radius: 8px;\n\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n`;\n\nexport const CheckmarkIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.buttonPrimary};\n`;\n\nexport const TransactionLabel = styled(StatusColors)`\n  display: block;\n  width: 8px;\n  height: 8px;\n\n  margin-right: 8px;\n`;\n\nexport const Content = styled.div`\n  padding-top: 40px;\n`;\n\nexport const SendWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const ValueCurrency = styled.div`\n  color: #000;\n  font-weight: 600;\n  font-size: 28px;\n  line-height: 120%;\n`;\n\nexport const ValueOriginal = styled.div`\n  margin-top: 4px;\n\n  color: ${theme.colors.bg.buttonDisabled};\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 120%;\n`;\n\nexport const SwapWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  margin-bottom: 40px;\n`;\n\nexport const SwapColumn = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n\n  &:not(:first-child) {\n    justify-content: flex-start;\n  }\n\n  &:not(:last-child) {\n    justify-content: flex-end;\n  }\n`;\n\nexport const SwapInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const SwapBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 32px;\n  height: 32px;\n  margin: 6px 26px 0;\n\n  background: ${theme.colors.bg.buttonSecondary};\n  border-radius: 12px;\n`;\n\nexport const SwapIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.bg.buttonDisabled};\n`;\n\nexport const SwapAmount = styled.div`\n  margin-top: 10px;\n\n  color: #000;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 120%;\n`;\n\nexport const FieldsWrapper = styled.div``;\n\nexport const FieldWrapper = styled.div`\n  padding: 16px 30px;\n\n  &:first-child {\n    border-top: 1px solid rgba(0, 0, 0, 0.05);\n  }\n\n  &:not(:last-child) {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n  }\n`;\n\nexport const FieldTitle = styled.div`\n  color: ${theme.colors.bg.buttonDisabled};\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 21px;\n`;\n\nexport const FieldValue = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 3px;\n\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 21px;\n`;\n\nexport const ShareIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.bg.buttonDisabled};\n`;\n\nexport const ShareWrapper = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 36px;\n  margin-left: 20px;\n\n  background: rgba(163, 165, 186, 0.1);\n  border-radius: 8px;\n  cursor: pointer;\n\n  &:hover {\n    background: ${theme.colors.bg.activePrimary};\n\n    ${ShareIcon} {\n      color: ${theme.colors.textIcon.active};\n    }\n  }\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 24px 20px;\n\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n\n  & > :not(:last-child) {\n    margin-right: 16px;\n  }\n\n  &.isCentered {\n    justify-content: center;\n  }\n`;\n\nexport const ButtonExplorer = styled(Button)`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 150%;\n`;\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 12px 20px;\n`;\n","import { styled } from '@linaria/react';\nimport { theme } from '@p2p-wallet-web/ui';\n\nimport type { IconProps } from 'components/ui';\nimport { Icon } from 'components/ui';\n\nexport const Section = styled.div`\n  display: grid;\n  padding: 20px 0;\n\n  &.swap {\n    position: relative;\n\n    padding: 0;\n  }\n\n  &.send {\n    grid-gap: 16px;\n    padding: 16px 0;\n  }\n\n  &.password {\n    padding: 8px 0 24px;\n  }\n`;\n\nexport const SectionTitle = styled.div`\n  color: ${theme.colors.bg.buttonDisabled};\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 140%;\n`;\n\nexport const FieldInfo = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px 20px;\n\n  border: 1px solid ${theme.colors.stroke.secondary};\n  border-radius: 12px;\n`;\n\nexport const WalletIcon = styled<IconProps>(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.secondary};\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 44px;\n  height: 44px;\n\n  background: ${theme.colors.bg.secondary};\n  border-radius: 12px;\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 9px 0 12px;\n`;\n\nexport const InfoTitle = styled.div`\n  color: ${theme.colors.textIcon.primary};\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 140%;\n\n  &.secondary {\n    color: ${theme.colors.textIcon.secondary};\n    font-size: 14px;\n    line-height: 120%;\n  }\n`;\n\nexport const Username = styled(InfoTitle)`\n  color: #000;\n  font-weight: 500;\n  font-size: 14px;\n`;\n\nexport const To = styled.span`\n  margin-right: 4px;\n\n  color: ${theme.colors.textIcon.secondary};\n`;\n\nexport const InfoValue = styled.div`\n  margin-top: 4px;\n\n  color: ${theme.colors.textIcon.secondary};\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 120%;\n  letter-spacing: 0.01em;\n`;\n\nexport const Subtitle = styled.div`\n  margin-top: 16px;\n  margin-bottom: 16px;\n  margin-left: 20px;\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 140%;\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: 8px;\n`;\n\nexport const FromToWrapper = styled.div`\n  position: absolute;\n  top: 64px;\n  left: 27px;\n\n  width: 32px;\n  height: 32px;\n\n  color: ${theme.colors.textIcon.active};\n\n  background: ${theme.colors.bg.primary};\n\n  border: 1px solid ${theme.colors.stroke.secondary};\n  border-radius: 40%;\n\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: absolute;\n  top: 5px;\n  left: -2px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 34px;\n  height: 19px;\n\n  background: ${theme.colors.bg.primary};\n`;\n","import type { FC } from 'react';\n\nimport { styled } from '@linaria/react';\nimport type { u64 } from '@saberhq/token-utils';\n\nimport type { NetworkFees, UseSendState } from 'app/contexts';\nimport { useSettings } from 'app/contexts';\nimport type { INITIAL_USER_FREE_FEE_LIMITS } from 'app/contexts/api/feeRelayer/utils';\nimport { FeeTransactionTooltip } from 'components/common/TransactionDetails/FeeTransactinTooltip';\nimport { AmountUSDStyled } from 'components/pages/swap/SwapWidget/AmountUSD';\nimport { Accordion } from 'components/ui';\nimport { AccordionTitle } from 'components/ui/AccordionDetails/AccordionTitle';\nimport { ListWrapper, Row, Text } from 'components/ui/AccordionDetails/common';\n\nexport interface TransactionDetailsProps {\n  sendState?: UseSendState;\n  userFreeFeeLimits?: typeof INITIAL_USER_FREE_FEE_LIMITS;\n  networkFees: NetworkFees;\n  btcAddress?: string;\n  isOpen?: boolean;\n  amount?: u64;\n}\n\nconst TokenAndUsd = styled.div`\n  display: flex;\n`;\n\nexport const TransactionDetails: FC<TransactionDetailsProps> = ({\n  sendState,\n  userFreeFeeLimits,\n  networkFees,\n  amount,\n}) => {\n  const {\n    settings: { useFreeTransactions },\n  } = useSettings();\n\n  return (\n    <Accordion\n      title={\n        <AccordionTitle\n          title=\"Transaction details\"\n          titleBottomName=\"Total\"\n          titleBottomValue={sendState?.details.totalAmount || ''}\n        />\n      }\n      open={false}\n      noContentPadding\n    >\n      <ListWrapper>\n        <Row>\n          <Text className=\"gray\">Receive</Text>\n          <TokenAndUsd>\n            <Text>{sendState?.details.receiveAmount}</Text>\n            <AmountUSDStyled\n              prefix=\"(~\"\n              postfix=\")\"\n              amount={sendState?.parsedAmount?.toU64() || amount}\n              tokenName={sendState?.fromTokenAccount?.balance?.token.symbol}\n            />\n          </TokenAndUsd>\n        </Row>\n        <Row>\n          <Text className=\"gray\">Transaction fee</Text>\n          {useFreeTransactions ? (\n            <Text>\n              Free{' '}\n              <Text className=\"green inline-flex\">\n                (Paid by P2P.org)\n                {userFreeFeeLimits && (\n                  <FeeTransactionTooltip userFreeFeeLimits={userFreeFeeLimits} />\n                )}\n              </Text>\n            </Text>\n          ) : (\n            <Text>1</Text>\n          )}\n        </Row>\n        {sendState?.details.accountCreationAmount ? (\n          <Row>\n            <Text className=\"gray\">{sendState.destinationAccount?.symbol} account creation</Text>\n            <TokenAndUsd>\n              <Text>{sendState.details.accountCreationAmount}</Text>\n              <AmountUSDStyled\n                prefix=\"(~\"\n                postfix=\")\"\n                amount={networkFees?.accountRentExemption}\n                tokenName={sendState.fromTokenAccount?.balance?.token.symbol}\n              />\n            </TokenAndUsd>\n          </Row>\n        ) : undefined}\n      </ListWrapper>\n      <ListWrapper className=\"total\">\n        <Row>\n          <Text>Total</Text>\n          <TokenAndUsd>\n            <Text>{sendState?.details.totalAmount}</Text>\n            <AmountUSDStyled\n              prefix=\"(~\"\n              postfix=\")\"\n              amount={sendState?.parsedAmount?.toU64() || amount}\n              tokenName={sendState?.fromTokenAccount?.balance?.token.symbol}\n            />\n          </TokenAndUsd>\n        </Row>\n      </ListWrapper>\n    </Accordion>\n  );\n};\n","import type { FC } from 'react';\n\nimport { styled } from '@linaria/react';\nimport type { TokenAccount } from '@p2p-wallet-web/core';\nimport type { TokenAmount } from '@p2p-wallet-web/token-utils';\nimport { theme } from '@p2p-wallet-web/ui';\nimport type { PublicKey } from '@solana/web3.js';\n\nimport { AddressText } from 'components/common/AddressText';\nimport { AmountUSD } from 'components/common/AmountUSD';\nimport { TokenAvatar } from 'components/common/TokenAvatar';\nimport type { TransactionDetailsProps } from 'components/common/TransactionDetails';\nimport { TransactionDetails } from 'components/common/TransactionDetails';\nimport { Icon } from 'components/ui';\n\nimport {\n  FieldInfo,\n  IconWrapper,\n  InfoTitle,\n  InfoValue,\n  InfoWrapper,\n  Section,\n  To,\n  Username,\n  WalletIcon,\n} from '../common/styled';\n\nconst ArrowWrapper = styled.div`\n  position: relative;\n\n  height: 16px;\n  margin-left: 26px;\n`;\n\nconst ArrowIconWrapper = styled.div`\n  position: relative;\n  top: -8px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n\n  color: ${theme.colors.textIcon.active};\n\n  background: ${theme.colors.bg.primary};\n  border: 1px solid ${theme.colors.stroke.secondary};\n  border-radius: 12px;\n\n  &::before,\n  &::after {\n    position: absolute;\n\n    width: 1px;\n    height: 16px;\n\n    background: ${theme.colors.bg.primary};\n\n    content: '';\n  }\n\n  &::before {\n    left: -1px;\n  }\n\n  &::after {\n    right: -1px;\n  }\n`;\n\nconst ArrowIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n`;\n\nexport type TransferParams = {\n  source: TokenAccount;\n  destination: PublicKey;\n  amount: TokenAmount;\n  username?: string;\n};\n\ninterface Props {\n  params: TransferParams;\n}\n\nexport const Send: FC<Props & TransactionDetailsProps> = ({\n  params,\n  sendState,\n  userFreeFeeLimits,\n  networkFees,\n  btcAddress,\n}) => {\n  const address = params.destination?.toBase58?.() || btcAddress;\n  const isFullName = /\\w*\\.\\w+/.test(params.username || '');\n\n  return (\n    <Section className=\"send\">\n      <div>\n        <FieldInfo>\n          <TokenAvatar\n            symbol={params.source.balance?.token.symbol}\n            address={params.source.balance?.token.address}\n            size={44}\n          />\n          <InfoWrapper>\n            <InfoTitle>{params.amount.formatUnits()}</InfoTitle>\n            <InfoValue>\n              <AmountUSD value={params.amount} />\n            </InfoValue>\n          </InfoWrapper>\n        </FieldInfo>\n        <ArrowWrapper>\n          <ArrowIconWrapper>\n            <ArrowIcon name=\"arrow-down\" />\n          </ArrowIconWrapper>\n        </ArrowWrapper>\n        <FieldInfo>\n          <IconWrapper>\n            <WalletIcon name=\"wallet\" />\n          </IconWrapper>\n          <InfoWrapper>\n            {params.username ? (\n              <Username>\n                <To>To</To>\n                {isFullName ? params.username : `${params.username}.p2p.sol`}\n              </Username>\n            ) : (\n              <InfoTitle className=\"secondary\">To address</InfoTitle>\n            )}\n            <InfoValue>{address && <AddressText address={address} medium />}</InfoValue>\n          </InfoWrapper>\n        </FieldInfo>\n      </div>\n\n      <TransactionDetails\n        sendState={sendState}\n        userFreeFeeLimits={userFreeFeeLimits}\n        networkFees={networkFees}\n        amount={params.amount.toU64()}\n      />\n    </Section>\n  );\n};\n","import type { FC } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { theme } from '@p2p-wallet-web/ui';\nimport dayjs from 'dayjs';\n\nexport const Time = styled.div`\n  color: ${theme.colors.textIcon.primary};\n`;\n\nexport const DateHeaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  color: ${theme.colors.textIcon.secondary};\n\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 120%;\n\n  & > *:not(:first-child) {\n    margin-left: 4px;\n  }\n`;\nexport const DateHeader: FC = () => {\n  const today = new Date();\n  const utcDiff = today.getHours() - today.getUTCHours();\n\n  return (\n    <DateHeaderWrapper>\n      <span>{dayjs().format('MMMM D, YYYY')}</span>\n      <Time>{dayjs().format('hh:mm:ss')}</Time>\n      <span>\n        (UTC{utcDiff >= 0 ? '+' : '-'}\n        {utcDiff})\n      </span>\n    </DateHeaderWrapper>\n  );\n};\n\nexport default DateHeader;\n","import type { FC } from 'react';\n\nimport { styled } from '@linaria/react';\nimport type { Network } from '@saberhq/solana-contrib';\nimport classNames from 'classnames';\n\nimport { Icon } from 'components/ui';\nimport { trackEventUniversal } from 'utils/analytics';\nimport type { AmplitudeActions } from 'utils/analytics/types';\nimport { getExplorerUrl } from 'utils/connection';\n\nimport { Footer } from '../styled';\n\ninterface IProps {\n  signature: string | null;\n  network: Network;\n  amplitudeAction: AmplitudeActions;\n}\n\nconst GoToExplorerIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n`;\n\nconst GoToExplorerLink = styled.a`\n  display: inline-flex;\n  align-items: center;\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 140%;\n\n  text-decoration: none;\n\n  &.isDisabled {\n    pointer-events: none;\n  }\n`;\n\nexport const SolanaExplorerLink: FC<IProps> = (props) => {\n  return (\n    <Footer>\n      <GoToExplorerLink\n        href={props.signature ? getExplorerUrl('tx', props.signature, props.network) : ''}\n        target=\"_blank\"\n        rel=\"noopener noreferrer noindex\"\n        onClick={() => {\n          trackEventUniversal(props.amplitudeAction);\n        }}\n        className={classNames({\n          isDisabled: !props.signature,\n        })}\n      >\n        <GoToExplorerIcon name={'external'} />\n        View in Solana explorer\n      </GoToExplorerLink>\n    </Footer>\n  );\n};\n","import type { FC } from 'react';\nimport { useEffect, useState } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { theme, zIndexes } from '@p2p-wallet-web/ui';\nimport classNames from 'classnames';\n\nimport { Icon } from 'components/ui';\n\nimport { INITIAL_PROGRESS } from '../../TransactionStatusSendModal';\nimport { StatusColors, TransactionLabel } from '../styled';\n\nexport const ProgressIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.buttonPrimary};\n`;\n\nexport const TransactionStatus = styled.div`\n  display: flex;\n  align-items: center;\n\n  margin-top: 13px;\n  margin-left: 38px;\n\n  color: ${theme.colors.textIcon.primary};\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 140%;\n`;\n\nexport const TransactionBadge = styled.div`\n  display: flex;\n  align-items: center;\n\n  margin-left: 4px;\n  padding: 5px 12px;\n\n  color: ${theme.colors.textIcon.secondary};\n\n  font-weight: 500;\n  font-size: 12px;\n\n  background: ${theme.colors.bg.secondary};\n  border-radius: 4px;\n`;\n\nexport const ProgressWrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 55px;\n`;\n\nexport const ProgressLine = styled.div`\n  position: absolute;\n\n  left: 0;\n\n  z-index: ${zIndexes.middle};\n\n  width: ${INITIAL_PROGRESS}%;\n  height: 2px;\n\n  background: ${theme.colors.bg.buttonPrimary};\n\n  transition: width 0.15s;\n\n  &.isSuccess {\n    background: ${theme.colors.system.successMain};\n  }\n\n  &.isError {\n    background: ${theme.colors.system.errorMain};\n  }\n`;\n\nexport const ProgressStub = styled.div`\n  position: absolute;\n\n  left: 0;\n\n  z-index: ${zIndexes.bottom};\n\n  width: 100%;\n  height: 1px;\n\n  background: ${theme.colors.stroke.secondary};\n`;\n\nexport const BlockWrapper = styled(StatusColors)`\n  z-index: ${zIndexes.top};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 55px;\n  height: 55px;\n\n  border-radius: 40%;\n`;\n\nexport interface Props {\n  isError: boolean;\n  isProcessing: boolean;\n  isSuccess: boolean;\n  isExecuting: boolean;\n  label: string;\n}\n\nconst UPPER_PROGRESS_BOUND = 95;\nconst LOWER_PROGRESS_BOUND = 7;\nconst FULL_PROGRESS = 100;\nconst CHECK_PROGRESS_INTERVAL = 2500;\n\nexport const TransactionProgress: FC<Props> = (props) => {\n  const [progress, setProgress] = useState(INITIAL_PROGRESS);\n\n  useEffect(() => {\n    let newProgress = INITIAL_PROGRESS;\n\n    if (!props.isExecuting) {\n      return;\n    }\n\n    const timerId = setInterval(() => {\n      if (progress <= UPPER_PROGRESS_BOUND) {\n        newProgress += LOWER_PROGRESS_BOUND;\n        setProgress(newProgress);\n      } else {\n        newProgress = UPPER_PROGRESS_BOUND;\n        setProgress(newProgress);\n      }\n    }, CHECK_PROGRESS_INTERVAL);\n\n    return () => {\n      clearTimeout(timerId);\n      setProgress(FULL_PROGRESS);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.isExecuting]);\n\n  const renderStatus = (executing: boolean, success: boolean, error: boolean) => {\n    switch (true) {\n      case executing:\n        return 'Pending';\n      case error:\n        return 'Error';\n      case success:\n        return 'Completed';\n      default:\n        return 'Pending';\n    }\n  };\n\n  return (\n    <>\n      <ProgressWrapper>\n        <ProgressLine\n          style={{ width: `${progress}%` }}\n          className={classNames({\n            isSuccess: props.isSuccess,\n            isError: props.isError,\n          })}\n        />\n        <ProgressStub />\n\n        <BlockWrapper\n          className={classNames({\n            isProcessing: props.isProcessing,\n            isSuccess: props.isSuccess,\n            isError: props.isError,\n          })}\n        >\n          {props.isSuccess ? (\n            <ProgressIcon name=\"success-send\" />\n          ) : (\n            <ProgressIcon name={props.isError ? 'error-send' : 'clock-send'} />\n          )}\n        </BlockWrapper>\n      </ProgressWrapper>\n      <TransactionStatus>\n        {props.label}\n        <TransactionBadge>\n          <TransactionLabel\n            className={classNames({\n              isProcessing: props.isProcessing,\n              isSuccess: props.isSuccess,\n              isError: props.isError,\n            })}\n          />\n          {renderStatus(props.isExecuting, props.isSuccess, props.isError)}\n        </TransactionBadge>\n      </TransactionStatus>\n    </>\n  );\n};\n","import type { FunctionComponent } from 'react';\nimport { useEffect, useState } from 'react';\n\nimport { useTransaction, useWallet } from '@p2p-wallet-web/core';\nimport { useConnectionContext } from '@saberhq/use-solana';\n\nimport type { ModalPropsType } from 'app/contexts';\nimport { ToastManager } from 'components/common/ToastManager';\nimport type { TransactionDetailsProps } from 'components/common/TransactionDetails';\nimport { trackEvent } from 'utils/analytics';\nimport { transferNotification } from 'utils/transactionNotifications';\n\nimport { Send } from '../../TransactionConfirmModal/Send/Send';\nimport { DateHeader, SolanaExplorerLink, TransactionProgress } from '../common';\nimport { CloseIcon, CloseWrapper, Header, Section, WrapperModal } from '../common/styled';\nimport type { TransferParams } from './Send';\n\nexport type TransactionStatusModalProps = TransactionDetailsProps & {\n  action: () => Promise<string>;\n  params: TransferParams;\n};\n\nexport const INITIAL_PROGRESS = 5;\nconst ADDRESS_CHARS_SHOW = 4;\nconst DEFAULT_TRANSACTION_ERROR = 'Transaction error';\nconst CHECK_TRANSACTION_INTERVAL = 3000;\n\nexport const TransactionStatusSendModal: FunctionComponent<\n  ModalPropsType<string | null> & TransactionStatusModalProps\n> = ({ type, action, params, sendState, userFreeFeeLimits, networkFees, close }) => {\n  const { provider } = useWallet();\n\n  const { network } = useConnectionContext();\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [signature, setSignature] = useState<string | null>(null);\n  const transaction = useTransaction(signature as string);\n  const [transactionError, setTransactionError] = useState(\n    transaction?.raw?.meta?.err ? DEFAULT_TRANSACTION_ERROR : '',\n  );\n\n  const executeAction = async () => {\n    try {\n      setIsExecuting(true);\n\n      switch (type) {\n        case 'send': {\n          const resultSignature = await action();\n          setSignature(resultSignature);\n\n          transferNotification({\n            header: 'Sent',\n            text: `- ${params.amount.formatUnits()}`,\n            symbol: params.amount.token.symbol,\n          });\n\n          break;\n        }\n        default:\n          throw new Error('Wrong type');\n      }\n    } catch (error) {\n      // setTransactionError((error as Error).message);\n      setIsExecuting(false);\n\n      if (type === 'send') {\n        ToastManager.error(type, (error as Error).message);\n        setTransactionError(DEFAULT_TRANSACTION_ERROR);\n      }\n    }\n  };\n\n  useEffect(() => {\n    void executeAction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const mount = async () => {\n      if (!signature) {\n        return;\n      }\n\n      try {\n        const trx = await provider.connection.getTransaction(signature, {\n          commitment: 'confirmed',\n        });\n        if (trx) {\n          if (trx.meta?.err) {\n            setTransactionError(DEFAULT_TRANSACTION_ERROR);\n          } else if (transactionError) {\n            setTransactionError('');\n          }\n        } else {\n          setTimeout(mount, CHECK_TRANSACTION_INTERVAL);\n        }\n      } catch (error) {\n        // setTransactionError((error as Error).message);\n        ToastManager.error((error as Error).message);\n      } finally {\n        setIsExecuting(false);\n      }\n    };\n\n    void mount();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [signature]);\n\n  const isProcessing = (!signature || !transaction?.key) && !transactionError;\n  const isSuccess = Boolean(signature && transaction?.key && !transactionError);\n  const isError = Boolean(transactionError);\n\n  const shortAddress = sendState?.destinationAddress.replace(\n    sendState?.destinationAddress.substring(\n      ADDRESS_CHARS_SHOW,\n      sendState?.destinationAddress.length - ADDRESS_CHARS_SHOW,\n    ),\n    '...',\n  );\n\n  const handleCloseClick = () => {\n    trackEvent('send_close_click', { transactionConfirmed: !isExecuting });\n\n    close(signature);\n  };\n\n  return (\n    <WrapperModal close={handleCloseClick}>\n      <Section>\n        <Header>\n          {params.amount.token.symbol} → {shortAddress}\n          <CloseWrapper onClick={handleCloseClick}>\n            <CloseIcon name=\"close\" />\n          </CloseWrapper>\n          <DateHeader />\n        </Header>\n      </Section>\n      <TransactionProgress\n        isError={isError}\n        isProcessing={isProcessing}\n        isSuccess={isSuccess}\n        isExecuting={isExecuting}\n        label={'Transaction status:'}\n      />\n      <Section>\n        <Send\n          sendState={sendState}\n          userFreeFeeLimits={userFreeFeeLimits}\n          params={params}\n          networkFees={networkFees}\n        />\n      </Section>\n      <SolanaExplorerLink\n        signature={signature}\n        network={network}\n        amplitudeAction={{\n          name: 'send_explorer_click',\n          data: { transactionConfirmed: !isExecuting },\n        }}\n      />\n    </WrapperModal>\n  );\n};\n"],"sourceRoot":""}