{"version":3,"file":"37deef548f68bb4a33f8.chunk.js","mappings":"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","sources":["webpack://@p2p-wallet-web/web/src/components/modals/ErrorModal/ErrorModal.tsx","webpack://@p2p-wallet-web/web/./src/utils/format.ts","webpack://@p2p-wallet-web/web/src/components/modals/TransactionInfoModals/TransactionDetailsModal/TransactionDetailsModal.tsx","webpack://@p2p-wallet-web/web/src/components/modals/TransactionInfoModals/common/styled.ts","webpack://@p2p-wallet-web/web/src/components/ui/Modal/Modal.tsx","webpack://@p2p-wallet-web/web/src/new/ui/components/common/ButtonCancel/ButtonCancel.tsx","webpack://@p2p-wallet-web/web/src/new/ui/components/common/ErrorHint/ErrorHint.tsx","webpack://@p2p-wallet-web/web/src/new/ui/components/common/PasswordInput/PasswordInput.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/ActionsMobileModal/ActionButton/ActionButton.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/ActionsMobileModal/ActionsMobileModal.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/ChooseBuyTokenMobileModal/ActionRow.tsx","webpack://@p2p-wallet-web/web/./src/new/ui/modals/ChooseBuyTokenMobileModal/ChooseBuyTokenMobileModal.ViewModel.ts","webpack://@p2p-wallet-web/web/./src/new/ui/modals/ChooseBuyTokenMobileModal/ChooseBuyTokenMobileModal.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/Modal/Modal.tsx","webpack://@p2p-wallet-web/web/src/components/modals/TransactionInfoModals/common/TransactionProgress/TransactionProgress.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/ProcessTransactionModal/Status/TransactionID/TransactionID.tsx","webpack://@p2p-wallet-web/web/./src/new/ui/modals/ProcessTransactionModal/ProcessTransactionModal.ViewModel.ts","webpack://@p2p-wallet-web/web/src/new/ui/modals/ProcessTransactionModal/Status/HeaderLabel/HeaderLabel.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/ProcessTransactionModal/Status/ProgressView/ProgressView.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/ProcessTransactionModal/ProcessTransactionModal.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/ReceiveBitcoinModal/common/styled.ts","webpack://@p2p-wallet-web/web/src/components/common/ButtonCancel/ButtonCancel.tsx","webpack://@p2p-wallet-web/web/./src/new/ui/modals/ReceiveBitcoinModal/Create/RenBTCButton/RenBTCButton.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/ReceiveBitcoinModal/Create/WalletSelectorContent/WalletSelectorContent.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/ReceiveBitcoinModal/Create/Create.tsx","webpack://@p2p-wallet-web/web/./src/new/ui/modals/ReceiveBitcoinModal/RenBTCStatusService/RenBTCStatusService.ts","webpack://@p2p-wallet-web/web/./src/new/ui/modals/ReceiveBitcoinModal/ReceiveBitcoinModal.ViewModel.ts","webpack://@p2p-wallet-web/web/src/new/ui/modals/ReceiveBitcoinModal/TopUp/TopUp.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/ReceiveBitcoinModal/ReceiveBitcoinModal.tsx","webpack://@p2p-wallet-web/web/./src/new/ui/modals/SelectListMobileModal/SelectListMobileModal.tsx","webpack://@p2p-wallet-web/web/./src/new/utils/SolanaSDK.ParsedTransaction.StatusExtensions.ts","webpack://@p2p-wallet-web/web/./src/new/ui/modals/TransactionModal/TransactionModal.ViewModal.ts","webpack://@p2p-wallet-web/web/src/new/ui/modals/TransactionModal/CopyImage/CopyImage.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/TransactionModal/SolanaExplorerLink/SolanaExplorerLink.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/TransactionModal/TransactionModal.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/confirmModals/ConfirmSendModal/AmountSummaryView/AmountSummaryView.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/confirmModals/ConfirmSendModal/RecipientView/RecipientView.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/confirmModals/ConfirmSendModal/ConfirmSendModal.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/confirmModals/common/SectionPassword/SectionPassword.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/confirmModals/ConfirmSwapModal/ActionButton/ActionButton.tsx","webpack://@p2p-wallet-web/web/./src/new/ui/modals/confirmModals/ConfirmSwapModal/ConfirmSwapModal.ViewModel.ts","webpack://@p2p-wallet-web/web/./src/new/ui/modals/confirmModals/ConfirmSwapModal/DetailsView/SlippageView/SlippageView.tsx","webpack://@p2p-wallet-web/web/./src/new/ui/modals/confirmModals/ConfirmSwapModal/DetailsView/DetailsView.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/confirmModals/ConfirmSwapModal/WalletView/WalletView.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/confirmModals/ConfirmSwapModal/ConfirmSwapModal.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/confirmModals/common/ArrowDown/ArrowDown.tsx","webpack://@p2p-wallet-web/web/src/new/ui/modals/confirmModals/common/styled.ts"],"sourcesContent":["import type { FunctionComponent } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { rgba } from 'polished';\n\nimport { Button, Icon } from 'components/ui';\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-basis: 504px;\n  flex-direction: column;\n  padding: 32px 0 24px;\n\n  overflow: hidden;\n\n  background: #fff;\n\n  border-radius: 15px;\n`;\n\nconst IconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 44px;\n  height: 44px;\n\n  margin: 0 20px;\n  padding: 8px;\n\n  background: #f77;\n  border-radius: 12px;\n`;\n\nconst StyledIcon = styled(Icon)`\n  width: 20px;\n  height: 20px;\n\n  color: #fff;\n`;\n\nconst Header = styled.div`\n  margin-top: 20px;\n  padding: 0 20px;\n\n  font-weight: 600;\n  font-size: 20px;\n`;\n\nconst Description = styled.div`\n  margin-top: 12px;\n  padding: 0 20px;\n  padding-bottom: 32px;\n\n  color: #a3a5ba;\n\n  font-weight: 600;\n  font-size: 16px;\n\n  border-bottom: 1px solid ${rgba('#000', 0.05)};\n`;\n\nconst Buttons = styled.div`\n  padding: 24px 20px 0;\n`;\n\nconst ButtonStyled = styled(Button)`\n  width: 120px;\n`;\n\ntype Props = {\n  icon: string;\n  header: string;\n  text: string;\n  close: () => void;\n};\n\nexport const ErrorModal: FunctionComponent<Props> = ({ icon, header, text, close }) => {\n  const handleCloseButtonClick = () => {\n    close();\n  };\n\n  return (\n    <Wrapper>\n      <IconWrapper>\n        <StyledIcon name={icon} />\n      </IconWrapper>\n      <Header>{header}</Header>\n      <Description>{text}</Description>\n      <Buttons>\n        <ButtonStyled primary onClick={handleCloseButtonClick}>\n          Ok\n        </ButtonStyled>\n      </Buttons>\n    </Wrapper>\n  );\n};\n","const USD_MAX_FRACTION_DIGITS = 2;\nconst GROUP_SIZE = 3;\n\nexport const formatNumberTo = (\n  currency: string,\n  amount: number,\n  options: { alwaysShowCents: boolean } = { alwaysShowCents: true },\n) => {\n  const minFractionDigits = options.alwaysShowCents ? USD_MAX_FRACTION_DIGITS : 0;\n\n  return amount\n    .toLocaleString('en-US', {\n      style: 'currency',\n      currency,\n      minimumFractionDigits: minFractionDigits,\n      maximumFractionDigits: USD_MAX_FRACTION_DIGITS,\n    })\n    .replace(/,/g, ' ');\n};\n\nexport const formatNumberToUSD = (\n  amount: number,\n  options: { alwaysShowCents: boolean } = { alwaysShowCents: true },\n) => {\n  const minFractionDigits = options.alwaysShowCents ? USD_MAX_FRACTION_DIGITS : 0;\n\n  return amount\n    .toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: minFractionDigits,\n      maximumFractionDigits: USD_MAX_FRACTION_DIGITS,\n    })\n    .replace(/,/g, ' ');\n};\n\nexport const formatNumber = (str: string | number) => {\n  str = String(str);\n  let res = '';\n  const match = str.match(/^(\\d+)(\\.\\d+)?$/);\n  if (!match) {\n    return '';\n  }\n  const integersAmount = match[1]?.length || 0;\n  for (\n    let i = 1, j = 0, blocksAmount = Math.ceil(integersAmount / GROUP_SIZE);\n    i <= blocksAmount;\n    i++, j++\n  ) {\n    let start = integersAmount - i * GROUP_SIZE;\n    const end = integersAmount - j * GROUP_SIZE;\n    start < 0 && (start = 0);\n    const substr = str.substring(start, end);\n    res = substr.concat(res ? ' ' : '', res);\n  }\n  return res + (match[2] || '');\n};\n\nexport const trimFormattedNumber = (valueStr: string) => {\n  return valueStr.replace(/\\s/g, '');\n};\n\nexport const getNumberFromFormattedNumber = (valueStr: string) => {\n  return Number(trimFormattedNumber(valueStr));\n};\n\nexport const getNumberFromFormattedUSD = (valueStr: string) => {\n  return getNumberFromFormattedNumber(valueStr.replace('$', ''));\n};\n","import type { FC } from 'react';\nimport { useEffect, useState } from 'react';\nimport Skeleton from 'react-loading-skeleton';\n\nimport { styled } from '@linaria/react';\nimport {\n  SwapTransaction,\n  titleCase,\n  TransferTransaction,\n  useTokenAccount,\n  useTokenAccountAmount,\n  useTransaction,\n  useWallet,\n} from '@p2p-wallet-web/core';\nimport { usePubkey } from '@p2p-wallet-web/sail';\nimport type { TransactionSignature } from '@solana/web3.js';\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\n\nimport { TokenAvatar } from 'components/common/TokenAvatar';\nimport { trackEvent } from 'utils/analytics';\nimport { getExplorerUrl } from 'utils/connection';\nimport { formatNumber } from 'utils/format';\nimport { shortAddress } from 'utils/tokens';\n\nimport {\n  ButtonExplorer,\n  CloseIcon,\n  CloseWrapper,\n  Content,\n  Desc,\n  FieldsWrapper,\n  FieldTitle,\n  FieldValue,\n  FieldWrapper,\n  Footer,\n  Header,\n  ProgressWrapper,\n  SendWrapper,\n  ShareIcon,\n  ShareWrapper,\n  SwapAmount,\n  SwapBlock,\n  SwapColumn,\n  SwapIcon,\n  SwapInfo,\n  SwapWrapper,\n  Title,\n  ValueCurrency,\n  ValueOriginal,\n  WrapperModal,\n} from '../common/styled';\n\nconst StatusWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nconst Status = styled.div`\n  display: flex;\n  align-items: center;\n  height: 32px;\n  padding: 2px 10px;\n\n  color: #a3a5ba;\n  font-weight: 600;\n  font-size: 13px;\n  line-height: 20px;\n\n  background: rgba(246, 246, 248, 0.5);\n  border-radius: 6px;\n`;\n\nconst StatusIndicator = styled.div`\n  width: 8px;\n  height: 8px;\n  margin-right: 6px;\n\n  background: #77db7c;\n  border-radius: 2px;\n\n  &.error {\n    background: #f43d3d;\n  }\n\n  &.processing {\n    background: #ffa631;\n  }\n`;\n\nconst FieldRowWrapper = styled(FieldWrapper)`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 36px;\n`;\n\nconst ColumnWrapper = styled.div``;\n\nconst FieldInfo = styled.div`\n  display: flex;\n  margin-top: 15px;\n`;\n\nconst AddressWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 9px 0 12px;\n`;\n\nconst AddressTitle = styled.div`\n  color: #000;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst AddressValue = styled.div`\n  color: #a3a5ba;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 16px;\n`;\n\nconst FieldTitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst PaidByBadge = styled.div`\n  padding: 1px 8px;\n\n  color: #5887ff;\n  font-weight: 600;\n  font-size: 12px;\n\n  background: #eff3ff;\n  border-radius: 4px;\n`;\n\nconst PaddedHeader = styled(Header)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 24px;\n`;\n\ntype Props = {\n  signature: TransactionSignature;\n  source: string;\n  close: () => void;\n};\n\nexport const TransactionDetailsModal: FC<Props> = ({ signature, source: sourceAddress, close }) => {\n  const [isShowDetails, setShowDetails] = useState(false);\n  const { network } = useWallet();\n  const transaction = useTransaction(signature, sourceAddress);\n\n  const sourceTokenAccount = useTokenAccount(usePubkey(transaction?.data?.source));\n  const destinationTokenAccount = useTokenAccount(usePubkey(transaction?.data?.destination));\n\n  const tokenAmount = useTokenAccountAmount(\n    usePubkey(transaction?.details.tokenAccount),\n    transaction?.details.amount,\n  );\n\n  useEffect(() => {\n    const type = transaction?.details.type;\n\n    if (type === 'send') {\n      trackEvent('Send_Process_Shown');\n    } else if (type === 'swap') {\n      trackEvent('Swap_Process_Shown');\n    }\n  }, [transaction?.details.type]);\n\n  // useEffect(() => {\n  //   const mount = async () => {\n  //     const trx = unwrapResult(await dispatch(getTransaction(signature)));\n  //\n  //     if (!trx) {\n  //       setTimeout(mount, 3000);\n  //     }\n  //   };\n  //\n  //   if (!transaction) {\n  //     void mount();\n  //   }\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [signature]);\n\n  if (transaction?.loading) {\n    return null;\n  }\n\n  const handleToggleShowDetailsClick = () => {\n    setShowDetails((state) => !state);\n  };\n\n  const renderFromTo = () => {\n    const type = transaction?.details.type;\n\n    const source = transaction?.data?.source;\n    const destination = transaction?.data?.destination;\n    const sourceToken = sourceTokenAccount?.balance?.token;\n    const destinationToken = destinationTokenAccount?.balance?.token;\n\n    if (type === 'swap') {\n      return (\n        <>\n          {source ? (\n            <FieldWrapper>\n              <FieldTitle>From</FieldTitle>\n              <FieldValue>{source}</FieldValue>\n            </FieldWrapper>\n          ) : undefined}\n          {destination ? (\n            <FieldWrapper>\n              <FieldTitle>To</FieldTitle>\n              <FieldValue>{destination}</FieldValue>\n            </FieldWrapper>\n          ) : undefined}\n        </>\n      );\n    }\n\n    if (type && ((source && sourceToken) || (destination && destinationToken))) {\n      return (\n        <FieldRowWrapper>\n          {source && sourceToken ? (\n            <ColumnWrapper>\n              <FieldTitle>From</FieldTitle>\n              <FieldInfo>\n                <TokenAvatar symbol={sourceToken.symbol} address={sourceToken.address} size={48} />\n                <AddressWrapper>\n                  <AddressTitle>{sourceToken.symbol}</AddressTitle>\n                  <AddressValue>{shortAddress(source)}</AddressValue>\n                </AddressWrapper>\n              </FieldInfo>\n            </ColumnWrapper>\n          ) : undefined}\n          {destination && destinationToken ? (\n            <ColumnWrapper>\n              <FieldTitle>To</FieldTitle>\n              <FieldInfo>\n                <TokenAvatar\n                  symbol={destinationToken.symbol}\n                  address={destinationToken.address}\n                  size={48}\n                />\n                <AddressWrapper>\n                  <AddressTitle>{destinationToken.symbol}</AddressTitle>\n                  <AddressValue>{shortAddress(destination)}</AddressValue>\n                </AddressWrapper>\n              </FieldInfo>\n            </ColumnWrapper>\n          ) : undefined}\n        </FieldRowWrapper>\n      );\n    }\n\n    return null;\n  };\n\n  const renderAmountBlock = () => {\n    const type = transaction?.details.type;\n\n    const sourceToken = sourceTokenAccount?.balance?.token;\n    const destinationToken = destinationTokenAccount?.balance?.token;\n\n    if (type === 'swap') {\n      return (\n        <SwapWrapper>\n          <SwapColumn>\n            <SwapInfo>\n              {sourceTokenAccount?.loading ? (\n                <Skeleton width={44} height={44} borderRadius={12} />\n              ) : (\n                <TokenAvatar\n                  symbol={sourceToken?.symbol}\n                  address={sourceToken?.address}\n                  size={44}\n                />\n              )}\n              <SwapAmount>\n                {sourceTokenAccount?.loading ? (\n                  <Skeleton width={50} height={16} />\n                ) : (\n                  <>- {sourceTokenAccount?.balance?.formatUnits()}</>\n                )}\n              </SwapAmount>\n            </SwapInfo>\n          </SwapColumn>\n          <SwapBlock>\n            <SwapIcon name=\"swap\" />\n          </SwapBlock>\n          <SwapColumn>\n            <SwapInfo>\n              {destinationTokenAccount?.loading ? (\n                <Skeleton width={44} height={44} borderRadius={12} />\n              ) : (\n                <TokenAvatar\n                  symbol={destinationToken?.symbol}\n                  address={destinationToken?.address}\n                  size={44}\n                />\n              )}\n              <SwapAmount>\n                {sourceTokenAccount?.loading ? (\n                  <Skeleton width={80} height={16} />\n                ) : (\n                  <>+ {destinationTokenAccount?.balance?.formatUnits()}</>\n                )}\n              </SwapAmount>\n            </SwapInfo>\n          </SwapColumn>\n        </SwapWrapper>\n      );\n    }\n\n    if (transaction?.loading || sourceTokenAccount?.loading || tokenAmount.loading) {\n      return (\n        <SendWrapper>\n          <Skeleton width={70} height={53} />\n        </SendWrapper>\n      );\n    }\n\n    if (tokenAmount.balance) {\n      return (\n        <SendWrapper>\n          <ValueCurrency>\n            {transaction?.details.isReceiver ? '+' : '-'} {tokenAmount.balance.formatUnits()}\n          </ValueCurrency>\n          <ValueOriginal>\n            <AmountUSD\n              prefix={transaction?.details.isReceiver ? '+ ' : '- '}\n              value={tokenAmount.balance}\n            />\n          </ValueOriginal>\n        </SendWrapper>\n      );\n    }\n\n    return null;\n  };\n\n  const date = transaction?.raw?.blockTime\n    ? dayjs.unix(transaction.raw.blockTime).format('LLL')\n    : `${transaction?.raw?.slot} SLOT`;\n\n  const isShowFeeBadge =\n    transaction?.data instanceof TransferTransaction && transaction.data.wasPaidByP2POrg;\n\n  return (\n    <WrapperModal close={close}>\n      <PaddedHeader>\n        <Title>{titleCase(transaction?.details.type)}</Title>\n        <Desc title={`${transaction?.raw?.slot} SLOT`}>{date}</Desc>\n        <CloseWrapper onClick={close}>\n          <CloseIcon name=\"close\" />\n        </CloseWrapper>\n      </PaddedHeader>\n      <ProgressWrapper />\n      <Content>\n        {/* {details.typeOriginal === 'transfer' ? ( */}\n        {/*  <SendWrapper> */}\n        {/*    <ValueCurrency> */}\n        {/*      {details.isReceiver ? '+' : '-'} {details.sourceAmount.toNumber()}{' '} */}\n        {/*      {details.sourceToken?.symbol} */}\n        {/*    </ValueCurrency> */}\n        {/*    <ValueOriginal> */}\n        {/*      <AmountUSD */}\n        {/*        prefix={details.isReceiver ? '+' : '-'} */}\n        {/*        symbol={details.sourceToken?.symbol} */}\n        {/*        value={details.sourceAmount} */}\n        {/*      /> */}\n        {/*    </ValueOriginal> */}\n        {/*  </SendWrapper> */}\n        {/* ) : undefined} */}\n\n        {renderAmountBlock()}\n        <StatusWrapper>\n          <Status>\n            <StatusIndicator\n              className={classNames({\n                error: !!transaction?.raw?.meta?.err,\n                // processing: !transaction?.raw?.slot,\n              })}\n            />{' '}\n            {transaction?.raw?.meta?.err\n              ? 'Failed'\n              : !transaction?.raw?.slot\n              ? 'Pending'\n              : 'Completed'}\n          </Status>\n        </StatusWrapper>\n        <FieldsWrapper>\n          {isShowDetails ? (\n            <>\n              {renderFromTo()}\n              {(sourceTokenAccount?.balance && destinationTokenAccount?.balance) ||\n              tokenAmount?.balance ? (\n                <FieldWrapper>\n                  <FieldTitle>Amount</FieldTitle>\n                  <FieldValue>\n                    {transaction?.data instanceof SwapTransaction ? (\n                      <>\n                        {sourceTokenAccount?.balance?.formatUnits()} to{' '}\n                        {destinationTokenAccount?.balance?.formatUnits()}\n                      </>\n                    ) : (\n                      <>{tokenAmount?.balance?.formatUnits()}</>\n                    )}\n                  </FieldValue>\n                </FieldWrapper>\n              ) : undefined}\n              {tokenAmount.balance ? (\n                <FieldWrapper>\n                  <FieldTitle>Value</FieldTitle>\n                  <FieldValue>\n                    <AmountUSD value={tokenAmount.balance} />\n                  </FieldValue>\n                </FieldWrapper>\n              ) : undefined}\n              {transaction?.raw?.meta ? (\n                <FieldWrapper>\n                  <FieldTitleWrapper>\n                    <FieldTitle>Transaction fee</FieldTitle>\n                    {isShowFeeBadge ? <PaidByBadge>Paid by p2p.org</PaidByBadge> : undefined}\n                  </FieldTitleWrapper>\n                  <FieldValue>{formatNumber(transaction.raw.meta?.fee)} lamports</FieldValue>\n                </FieldWrapper>\n              ) : null}\n              <FieldWrapper>\n                <FieldTitle>Block number</FieldTitle>\n                <FieldValue>#{transaction?.raw?.slot}</FieldValue>\n              </FieldWrapper>\n            </>\n          ) : undefined}\n          <FieldWrapper>\n            <FieldTitle>Transaction ID</FieldTitle>\n            <FieldValue>\n              {signature}{' '}\n              <a\n                href={getExplorerUrl('tx', signature, network)}\n                target=\"_blank\"\n                rel=\"noopener noreferrer noindex\"\n                className=\"button\"\n              >\n                <ShareWrapper>\n                  <ShareIcon name=\"external\" />\n                </ShareWrapper>\n              </a>\n            </FieldValue>\n          </FieldWrapper>\n        </FieldsWrapper>\n      </Content>\n      <Footer className={classNames({ isCentered: true })}>\n        <ButtonExplorer lightGray onClick={handleToggleShowDetailsClick}>\n          {isShowDetails ? 'Hide transaction details' : 'Show transaction details'}\n        </ButtonExplorer>\n      </Footer>\n    </WrapperModal>\n  );\n};\n","import { styled } from '@linaria/react';\nimport { theme, up, zIndexes } from '@p2p-wallet-web/ui';\n\nimport { Button, Icon } from 'components/ui';\nimport { Content as ModalContent, Modal } from 'components/ui/Modal';\n\nexport const StatusColors = styled.div`\n  &.isProcessing {\n    background: ${theme.colors.system.warningMain};\n  }\n\n  &.isSuccess {\n    background: ${theme.colors.system.successMain};\n  }\n\n  &.isError {\n    background: ${theme.colors.system.errorMain};\n  }\n`;\n\nexport const WrapperModal = styled(Modal)`\n  display: flex;\n  flex-direction: column;\n  justify-content: stretch;\n  padding: 0;\n  overflow: scroll;\n\n  background: ${theme.colors.bg.primary};\n\n  border-radius: 15px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);\n\n  ${ModalContent} {\n    ${up.tablet} {\n      width: 524px;\n    }\n\n    padding: 0;\n  }\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const ProgressWrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 55px;\n`;\n\nexport const BlockWrapper = styled(StatusColors)`\n  z-index: ${zIndexes.top};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 55px;\n  height: 55px;\n\n  border-radius: 40%;\n`;\n\nexport const OtherIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.buttonPrimary};\n`;\n\nexport const Header = styled.div`\n  position: relative;\n\n  color: ${theme.colors.textIcon.primary};\n  font-weight: 500;\n  font-size: 24px;\n  font-style: normal;\n  line-height: 140%;\n  text-align: center;\n`;\n\nexport const Title = styled.div`\n  margin-bottom: 10px;\n  padding: 0 30px;\n\n  color: #000;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 100%;\n  text-transform: capitalize;\n`;\n\nexport const Desc = styled.div`\n  color: ${theme.colors.bg.buttonDisabled};\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 100%;\n`;\n\nexport const CloseWrapper = styled.div`\n  position: absolute;\n  right: 0;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n\n  color: ${theme.colors.bg.buttonPrimary};\n\n  border-radius: 8px;\n\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n`;\n\nexport const CheckmarkIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.buttonPrimary};\n`;\n\nexport const TransactionLabel = styled(StatusColors)`\n  display: block;\n  width: 8px;\n  height: 8px;\n\n  margin-right: 8px;\n`;\n\nexport const Content = styled.div`\n  padding-top: 40px;\n`;\n\nexport const SendWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const ValueCurrency = styled.div`\n  color: #000;\n  font-weight: 600;\n  font-size: 28px;\n  line-height: 120%;\n`;\n\nexport const ValueOriginal = styled.div`\n  margin-top: 4px;\n\n  color: ${theme.colors.bg.buttonDisabled};\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 120%;\n`;\n\nexport const SwapWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  margin-bottom: 40px;\n`;\n\nexport const SwapColumn = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n\n  &:not(:first-child) {\n    justify-content: flex-start;\n  }\n\n  &:not(:last-child) {\n    justify-content: flex-end;\n  }\n`;\n\nexport const SwapInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const SwapBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 32px;\n  height: 32px;\n  margin: 6px 26px 0;\n\n  background: ${theme.colors.bg.buttonSecondary};\n  border-radius: 12px;\n`;\n\nexport const SwapIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.bg.buttonDisabled};\n`;\n\nexport const SwapAmount = styled.div`\n  margin-top: 10px;\n\n  color: #000;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 120%;\n`;\n\nexport const FieldsWrapper = styled.div``;\n\nexport const FieldWrapper = styled.div`\n  padding: 16px 30px;\n\n  &:first-child {\n    border-top: 1px solid rgba(0, 0, 0, 0.05);\n  }\n\n  &:not(:last-child) {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n  }\n`;\n\nexport const FieldTitle = styled.div`\n  color: ${theme.colors.bg.buttonDisabled};\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 21px;\n`;\n\nexport const FieldValue = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 3px;\n\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 21px;\n`;\n\nexport const ShareIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.bg.buttonDisabled};\n`;\n\nexport const ShareWrapper = styled.div`\n  display: flex;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 36px;\n  margin-left: 20px;\n\n  background: rgba(163, 165, 186, 0.1);\n  border-radius: 8px;\n  cursor: pointer;\n\n  &:hover {\n    background: ${theme.colors.bg.activePrimary};\n\n    ${ShareIcon} {\n      color: ${theme.colors.textIcon.active};\n    }\n  }\n`;\n\nexport const Footer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 24px 20px;\n\n  border-top: 1px solid rgba(0, 0, 0, 0.05);\n\n  & > :not(:last-child) {\n    margin-right: 16px;\n  }\n\n  &.isCentered {\n    justify-content: center;\n  }\n`;\n\nexport const ButtonExplorer = styled(Button)`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 150%;\n`;\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 12px 20px;\n`;\n","import type { FunctionComponent } from 'react';\nimport * as React from 'react';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { animated, useSpring, useTransition } from 'react-spring';\n\nimport { styled } from '@linaria/react';\nimport { theme, up, useIsMobile } from '@p2p-wallet-web/ui';\nimport { DialogContent } from '@reach/dialog';\nimport { useDrag } from '@use-gesture/react';\nimport BezierEasing from 'bezier-easing';\nimport classNames from 'classnames';\n\nimport { Icon } from 'components/ui';\n\n// eslint-disable-next-line @typescript-eslint/no-magic-numbers\nconst easing = BezierEasing(0.7, -0.4, 0.4, 1.4);\n\nconst AnimatedDialogContent = animated(DialogContent);\n\nconst DRAG_MOVEMENT_THRESHOLD = 300;\nconst DRAG_VELOCITY_THRESHOLD = 3;\n\nconst StyledDialogContent = styled(({ ...props }) => <AnimatedDialogContent {...props} />)`\n  max-height: calc(100vh - 80px);\n\n  overflow-y: ${({ mobile }) => (mobile ? 'scroll' : 'hidden')};\n\n  &[data-reach-dialog-content] {\n    position: fixed;\n    right: 0;\n\n    display: flex;\n    flex-direction: column;\n    align-self: flex-end;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    overflow-x: hidden;\n    overflow-y: scroll;\n\n    background: ${theme.colors.bg.primary};\n    border-radius: 18px 18px 0 0;\n\n    touch-action: none;\n\n    ${up.tablet} {\n      position: relative;\n      right: unset;\n      bottom: unset;\n\n      align-self: center;\n      width: unset;\n      height: unset;\n      margin: 0;\n\n      border-radius: 12px;\n    }\n  }\n\n  &:focus-visible {\n    outline: none;\n  }\n`;\n\nconst Handle = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 16px;\n\n  &::before {\n    position: absolute;\n\n    width: 31px;\n    height: 4px;\n\n    background: ${theme.colors.textIcon.buttonDisabled};\n\n    content: '';\n  }\n`;\n\nconst Header = styled.div`\n  position: relative;\n\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  min-height: 74px;\n`;\n\nconst Delimiter = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &.hasIcon {\n    height: 44px;\n\n    ${up.tablet} {\n      height: 56px;\n    }\n  }\n\n  &::before {\n    position: absolute;\n\n    width: 100%;\n    height: 1px;\n\n    background: ${theme.colors.stroke.secondary};\n\n    content: '';\n  }\n`;\n\nconst IconWrapper = styled.div`\n  z-index: 1;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 44px;\n  height: 44px;\n\n  border-radius: 12px;\n\n  ${up.tablet} {\n    width: 56px;\n    height: 56px;\n  }\n\n  &.warning {\n    background: ${theme.colors.system.warningMain};\n  }\n`;\n\nconst IconStyled = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.buttonPrimary};\n\n  ${up.tablet} {\n    width: 32px;\n    height: 32px;\n  }\n`;\n\nconst Title = styled.div`\n  color: ${theme.colors.textIcon.primary};\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 140%;\n  letter-spacing: 0.01em;\n`;\n\nconst Description = styled.div`\n  color: ${theme.colors.textIcon.secondary};\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 120%;\n  letter-spacing: 0.01em;\n`;\n\nconst CloseIcon = styled(Icon)`\n  position: absolute;\n  top: 25px;\n  right: 20px;\n\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.active};\n\n  cursor: pointer;\n`;\n\nexport const Content = styled.div`\n  padding: 0 16px;\n\n  ${up.tablet} {\n    padding: 0 20px;\n  }\n`;\n\nconst Footer = styled.div`\n  display: grid;\n  grid-auto-flow: row;\n  grid-gap: 16px;\n  margin-bottom: 16px;\n  padding: 0 16px;\n\n  ${up.tablet} {\n    grid-auto-flow: column;\n    padding: 20px;\n  }\n`;\n\nexport type ModalProps = {\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  footer?: React.ReactNode;\n  iconName?: string;\n  iconBgClassName?: string;\n\n  noDelimiter?: boolean;\n  close: () => void;\n  doNotCloseOnPathChangeMobile?: boolean;\n  className?: string;\n};\n\nexport const Modal: FunctionComponent<ModalProps> = ({\n  title,\n  description,\n  footer,\n  iconName,\n  iconBgClassName,\n\n  noDelimiter,\n  close,\n  doNotCloseOnPathChangeMobile,\n  className,\n\n  children,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const isMobile = useIsMobile();\n  const location = useLocation();\n  const currentPath = useRef(location.pathname);\n\n  useEffect(() => {\n    if (isMobile && !doNotCloseOnPathChangeMobile && currentPath.current !== location.pathname) {\n      close();\n    }\n  }, [isMobile, doNotCloseOnPathChangeMobile, location.pathname]);\n\n  useEffect(() => {\n    setIsOpen(true);\n\n    return () => {\n      setIsOpen(false);\n    };\n  }, []);\n\n  const config = useMemo(() => {\n    if (isMobile) {\n      return {\n        config: { duration: 600, easing: (t: number) => easing(t) },\n        from: { transform: 'translateY(100px)' },\n        enter: { transform: 'translateX(0)' },\n        leave: { transform: 'translateY(100px)' },\n      };\n    }\n\n    return {\n      // config: { duration: 600, easing: (t: number) => easing(t) },\n      // from: { transform: 'translateX(422px)' },\n      // enter: { transform: 'translateX(0)' },\n      // leave: { transform: 'translateX(422px)' },\n    };\n  }, [isMobile]);\n\n  const fadeTransition = useTransition(isOpen, null, config);\n\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: { mass: 1, tension: 210, friction: 20 } }));\n  const bind = useDrag((state) => {\n    set({\n      y: state.down ? state.movement[1] : 0,\n    });\n    if (\n      state.movement[1] > DRAG_MOVEMENT_THRESHOLD ||\n      (state.velocity[1] > DRAG_VELOCITY_THRESHOLD && state.direction[1] > 0)\n    ) {\n      close();\n    }\n  });\n\n  return (\n    <>\n      {fadeTransition.map(\n        ({ item, key, props }) =>\n          item && (\n            <StyledDialogContent\n              key={key}\n              {...(isMobile\n                ? {\n                    ...bind(),\n                    style: {\n                      ...props,\n                      transform: y.interpolate((n) => `translateY(${(n as number) > 0 ? n : 0}px)`),\n                    },\n                  }\n                : {\n                    style: props,\n                  })}\n              aria-label=\"dialog\"\n              className={className}\n            >\n              {isMobile ? <Handle /> : undefined}\n              {title || description ? (\n                <Header>\n                  {title ? <Title>{title}</Title> : undefined}\n                  {description ? <Description>{description}</Description> : undefined}\n                  {!isMobile ? <CloseIcon name=\"cross\" onClick={close} /> : undefined}\n                </Header>\n              ) : undefined}\n              {!noDelimiter ? (\n                <Delimiter className={classNames({ hasIcon: Boolean(iconName) })}>\n                  {iconName ? (\n                    <IconWrapper className={iconBgClassName}>\n                      <IconStyled name={iconName} />\n                    </IconWrapper>\n                  ) : undefined}\n                </Delimiter>\n              ) : undefined}\n              {children ? <Content>{children}</Content> : undefined}\n              {footer ? <Footer>{footer}</Footer> : undefined}\n            </StyledDialogContent>\n          ),\n      )}\n    </>\n  );\n};\n","import type { FC } from 'react';\nimport * as React from 'react';\n\nimport { styled } from '@linaria/react';\n\nimport { Button, Icon } from 'components/ui';\n\nconst CancelIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n`;\n\ntype Props = React.ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport const ButtonCancel: FC<Props> = (props) => {\n  return (\n    <Button {...props} hollow error>\n      <CancelIcon name=\"cross\" />\n      Cancel\n    </Button>\n  );\n};\n","import type { FC } from 'react';\n\nimport { styled } from '@linaria/react';\n\nimport { Icon } from 'components/ui';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 8px;\n\n  color: #f43d3d;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst WarningIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  margin-right: 12px;\n\n  color: #f43d3d;\n`;\n\ninterface Props {\n  error: string;\n  noIcon?: boolean;\n}\n\nexport const ErrorHint: FC<Props> = ({ error, noIcon }) => {\n  return (\n    <Wrapper>\n      {!noIcon ? <WarningIcon name=\"warning\" /> : undefined}\n      {error}\n    </Wrapper>\n  );\n};\n","import type { FC } from 'react';\nimport { useState } from 'react';\nimport * as React from 'react';\n\nimport { styled } from '@linaria/react';\nimport { theme } from '@p2p-wallet-web/ui';\nimport classNames from 'classnames';\n\nimport { Icon } from 'components/ui';\n\nconst WrapperLabel = styled.label`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  height: 54px;\n  padding: 0 15px;\n\n  border: 1px solid ${theme.colors.stroke.primary};\n  border-radius: 12px;\n  cursor: text;\n\n  &.isFocused {\n    background: ${theme.colors.bg.primary};\n    border-color: ${theme.colors.textIcon.active};\n    caret-color: ${theme.colors.textIcon.active};\n  }\n\n  &.isError {\n    border-color: ${theme.colors.system.errorMain};\n  }\n`;\n\nconst Input = styled.input`\n  flex: 1;\n\n  color: ${theme.colors.textIcon.primary};\n  font-weight: 500;\n  font-size: 16px;\n  font-family: 'Inter', sans-serif;\n  line-height: 22px;\n\n  background: transparent;\n  border: 0;\n  outline: none;\n\n  appearance: none;\n\n  &::placeholder {\n    color: ${theme.colors.textIcon.tertiary};\n\n    font-weight: 500;\n    font-size: 16px;\n    font-family: 'Inter', sans-serif;\n    font-style: normal;\n    line-height: 140%;\n  }\n`;\n\nconst EyeWrapper = styled.div`\n  cursor: pointer;\n`;\n\nconst EyeIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.buttonSecondary};\n`;\n\nconst REGEX_PASSWORD = /[^\\w!\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~-]+/g;\n\ntype Props = {\n  onChange: (password: string) => void;\n  isError: boolean;\n};\n\nexport const PasswordInput: FC<\n  Props & Omit<React.InputHTMLAttributes<HTMLInputElement>, 'type' | 'onChange'>\n> = ({ onChange, onFocus, onBlur, className, isError, ...props }) => {\n  const [isShowPassword, setIsShowPassword] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(REGEX_PASSWORD, '');\n    onChange(value);\n  };\n\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    setIsFocused(true);\n\n    if (onFocus) {\n      onFocus(e);\n    }\n  };\n\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    setIsFocused(false);\n\n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  const handleToggleShowPassword = () => {\n    setIsShowPassword((state) => !state);\n  };\n\n  return (\n    <WrapperLabel className={classNames(className, { isFocused, isError })}>\n      <Input\n        type={isShowPassword ? 'input' : 'password'}\n        {...props}\n        placeholder={'Password'}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n      />\n      <EyeWrapper onClick={handleToggleShowPassword}>\n        <EyeIcon name={isShowPassword ? 'eye' : 'eye-hide'} />\n      </EyeWrapper>\n    </WrapperLabel>\n  );\n};\n","import type { FC, HTMLAttributes } from 'react';\nimport React from 'react';\n\nimport { styled } from '@linaria/react';\nimport { theme } from '@p2p-wallet-web/ui';\n\nimport { Icon } from 'components/ui';\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n\n  color: ${theme.colors.textIcon.primary};\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 140%;\n  letter-spacing: 0.01em;\n\n  &:not(:last-child)::before {\n    position: absolute;\n\n    bottom: -12px;\n\n    width: 100%;\n    height: 1px;\n\n    background: ${theme.colors.stroke.secondary};\n\n    content: '';\n  }\n`;\n\nconst IconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  margin-right: 8px;\n\n  color: ${theme.colors.textIcon.secondary};\n`;\n\nconst IconStyled = styled(Icon)`\n  width: 20px;\n  height: 20px;\n`;\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n  icon: string;\n}\n\nexport const ActionButton: FC<Props> = ({ icon, onClick, children }) => {\n  return (\n    <Wrapper onClick={onClick}>\n      <IconWrapper>\n        <IconStyled name={icon} />\n      </IconWrapper>\n      {children}\n    </Wrapper>\n  );\n};\n","import type { FC } from 'react';\nimport { useHistory, useLocation } from 'react-router';\n\nimport { styled } from '@linaria/react';\n\nimport type { LayoutViewModel } from 'new/ui/components/common/Layout/Layout.ViewModel';\nimport type { ModalPropsType } from 'new/ui/managers/ModalManager';\nimport { ActionButton } from 'new/ui/modals/ActionsMobileModal/ActionButton';\nimport { Modal } from 'new/ui/modals/Modal';\n\nconst Content = styled.div`\n  display: grid;\n  grid-gap: 25px;\n\n  padding: 18px 0;\n`;\n\ninterface Props {\n  layoutViewModel: LayoutViewModel;\n}\n\nexport const ActionsMobileModal: FC<Props & ModalPropsType> = ({ close, layoutViewModel }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleButtonClick = (route: string) => () => {\n    close(false);\n\n    if (location.pathname !== route) {\n      history.push(route, { fromPage: location.pathname });\n    }\n  };\n\n  const handleBuyButtonClick = () => {\n    close(false);\n    layoutViewModel.openChooseBuyTokenMobileModal();\n  };\n\n  const handleCloseClick = () => {\n    close(false);\n  };\n\n  return (\n    <Modal close={handleCloseClick} noDelimiter>\n      <Content>\n        <ActionButton icon=\"plus\" onClick={handleBuyButtonClick}>\n          Buy\n        </ActionButton>\n        <ActionButton icon=\"bottom\" onClick={handleButtonClick('/receive')}>\n          Receive\n        </ActionButton>\n        <ActionButton icon=\"top\" onClick={handleButtonClick('/send')}>\n          Send\n        </ActionButton>\n        <ActionButton icon=\"swap\" onClick={handleButtonClick('/swap')}>\n          Swap\n        </ActionButton>\n      </Content>\n    </Modal>\n  );\n};\n","import type { FC } from 'react';\n\nimport { styled } from '@linaria/react';\n\nimport type { Token, Wallet } from 'new/sdk/SolanaSDK';\nimport {\n  BaseTokenCellContent,\n  BaseWalletCellContent,\n} from 'new/ui/components/common/BaseWalletCellContent';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 26px 10px;\n`;\n\ninterface Props {\n  wallet?: Wallet;\n  token?: Token;\n  onClick: () => void;\n}\n\nexport const ActionRow: FC<Props> = ({ wallet, token, onClick }) => {\n  return (\n    <Wrapper onClick={onClick}>\n      {token ? (\n        <BaseTokenCellContent token={token} isMobilePopupChild />\n      ) : (\n        <BaseWalletCellContent wallet={wallet} isMobilePopupChild />\n      )}\n    </Wrapper>\n  );\n};\n","import { action, makeObservable, observable, reaction, runInAction } from 'mobx';\nimport { singleton } from 'tsyringe';\n\nimport { ViewModel } from 'new/core/viewmodels/ViewModel';\nimport type { Token, Wallet } from 'new/sdk/SolanaSDK';\nimport { CryptoCurrency } from 'new/services/BuyService/structures';\nimport { TokensRepository, WalletsRepository } from 'new/services/Repositories';\n\n@singleton()\nexport class ChooseBuyTokenMobileModalViewModel extends ViewModel {\n  solWallet?: Wallet;\n  usdcWallet?: Wallet;\n\n  solToken?: Token;\n  usdcToken?: Token;\n\n  constructor(private _wallets: WalletsRepository, private _tokensRepository: TokensRepository) {\n    super();\n\n    makeObservable(this, {\n      solWallet: observable,\n      usdcWallet: observable,\n\n      solToken: observable,\n      usdcToken: observable,\n    });\n\n    this._setWallets(\n      this._getBuySelectionWallet(CryptoCurrency.sol),\n      this._getBuySelectionWallet(CryptoCurrency.usdc),\n    );\n  }\n\n  protected override setDefaults() {}\n\n  protected override onInitialize() {\n    this.addReaction(\n      reaction(\n        () => [\n          this._getBuySelectionWallet(CryptoCurrency.sol),\n          this._getBuySelectionWallet(CryptoCurrency.usdc),\n        ],\n        ([newSOLWallet, newUSDCWallet]) => this._setWallets(newSOLWallet, newUSDCWallet),\n      ),\n    );\n  }\n\n  protected override afterReactionsRemoved() {}\n\n  private _getBuySelectionWallet(cryptoCurrency: CryptoCurrency): Wallet | undefined {\n    return this._wallets\n      .getWallets()\n      .find(\n        (wallet) =>\n          wallet.token.symbol === cryptoCurrency.symbol &&\n          wallet.token.address === cryptoCurrency.mintAddress,\n      );\n  }\n\n  private _getToken(cryptoCurrency: CryptoCurrency): Promise<Token | undefined> {\n    return this._tokensRepository.getTokenWithMint(cryptoCurrency.mintAddress);\n  }\n\n  private _setWallets(newSOLWallet?: Wallet, newUSDCWallet?: Wallet): void {\n    if (newSOLWallet) {\n      runInAction(() => (this.solWallet = newSOLWallet));\n    } else {\n      this._getToken(CryptoCurrency.sol).then(\n        action((newSOLToken) => (this.solToken = newSOLToken)),\n      );\n    }\n\n    if (newUSDCWallet) {\n      runInAction(() => (this.usdcWallet = newUSDCWallet));\n    } else {\n      this._getToken(CryptoCurrency.usdc).then(\n        action((newUSDCToken) => (this.usdcToken = newUSDCToken)),\n      );\n    }\n  }\n}\n","import type { FC } from 'react';\nimport { useHistory, useLocation } from 'react-router';\n\nimport { observer } from 'mobx-react-lite';\n\nimport { useViewModel } from 'new/core/viewmodels/useViewModel';\nimport { CryptoCurrency } from 'new/services/BuyService/structures';\nimport type { ModalPropsType } from 'new/ui/managers/ModalManager';\nimport { ActionRow } from 'new/ui/modals/ChooseBuyTokenMobileModal/ActionRow';\nimport { ChooseBuyTokenMobileModalViewModel } from 'new/ui/modals/ChooseBuyTokenMobileModal/ChooseBuyTokenMobileModal.ViewModel';\nimport { Modal } from 'new/ui/modals/Modal';\n\nexport const ChooseBuyTokenMobileModal: FC<ModalPropsType> = observer(({ close }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const { solWallet, solToken, usdcWallet, usdcToken } = useViewModel(\n    ChooseBuyTokenMobileModalViewModel,\n  );\n\n  const handleCloseClick = () => {\n    close(false);\n  };\n\n  const handleRowClick = (cryptoCurrency: CryptoCurrency) => {\n    close(false);\n\n    const newPath = `/buy/${cryptoCurrency.symbol}`;\n\n    if (location.pathname !== newPath) {\n      history.push(newPath);\n    }\n  };\n\n  return (\n    <Modal noDelimiter={false} close={handleCloseClick} title=\"Choose a crypto for buying\">\n      <ActionRow\n        wallet={solWallet}\n        token={solToken}\n        onClick={() => handleRowClick(CryptoCurrency.sol)}\n      />\n      <ActionRow\n        wallet={usdcWallet}\n        token={usdcToken}\n        onClick={() => handleRowClick(CryptoCurrency.usdc)}\n      />\n    </Modal>\n  );\n});\n","import type { FunctionComponent } from 'react';\nimport * as React from 'react';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport { animated, useSpring, useTransition } from 'react-spring';\n\nimport { styled } from '@linaria/react';\nimport { theme, up, useIsMobile } from '@p2p-wallet-web/ui';\nimport { DialogContent } from '@reach/dialog';\nimport { useDrag } from '@use-gesture/react';\nimport BezierEasing from 'bezier-easing';\nimport classNames from 'classnames';\n\nimport { Icon } from 'components/ui';\n\n// eslint-disable-next-line @typescript-eslint/no-magic-numbers\nconst easing = BezierEasing(0.7, -0.4, 0.4, 1.4);\n\nconst AnimatedDialogContent = animated(DialogContent);\n\nconst DRAG_MOVEMENT_THRESHOLD = 300;\nconst DRAG_VELOCITY_THRESHOLD = 3;\n\nconst StyledDialogContent = styled(({ ...props }) => <AnimatedDialogContent {...props} />)`\n  max-height: calc(100vh - 80px);\n\n  overflow-y: ${({ mobile }) => (mobile ? 'scroll' : 'hidden')};\n\n  &[data-reach-dialog-content] {\n    position: fixed;\n    right: 0;\n\n    display: flex;\n    flex-direction: column;\n    align-self: flex-end;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    overflow-x: hidden;\n    overflow-y: scroll;\n\n    background: ${theme.colors.bg.primary};\n    border-radius: 18px 18px 0 0;\n\n    touch-action: none;\n\n    ${up.tablet} {\n      position: relative;\n      right: unset;\n      bottom: unset;\n\n      align-self: center;\n      width: unset;\n      height: unset;\n      margin: 0;\n\n      border-radius: 12px;\n    }\n  }\n\n  &:focus-visible {\n    outline: none;\n  }\n`;\n\nconst Handle = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 16px;\n\n  &::before {\n    position: absolute;\n\n    width: 31px;\n    height: 4px;\n\n    background: ${theme.colors.textIcon.buttonDisabled};\n\n    content: '';\n  }\n`;\n\nconst Header = styled.div`\n  position: relative;\n\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  min-height: 74px;\n`;\n\nconst Delimiter = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &.hasIcon {\n    height: 44px;\n\n    ${up.tablet} {\n      height: 56px;\n    }\n  }\n\n  &::before {\n    position: absolute;\n\n    width: 100%;\n    height: 1px;\n\n    background: ${theme.colors.stroke.secondary};\n\n    content: '';\n  }\n`;\n\nconst IconWrapper = styled.div`\n  z-index: 1;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 44px;\n  height: 44px;\n\n  border-radius: 12px;\n\n  ${up.tablet} {\n    width: 56px;\n    height: 56px;\n  }\n\n  &.warning {\n    background: ${theme.colors.system.warningMain};\n  }\n`;\n\nconst IconStyled = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.buttonPrimary};\n\n  ${up.tablet} {\n    width: 32px;\n    height: 32px;\n  }\n`;\n\nconst Title = styled.div`\n  color: ${theme.colors.textIcon.primary};\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 140%;\n  letter-spacing: 0.01em;\n`;\n\nconst Description = styled.div`\n  color: ${theme.colors.textIcon.secondary};\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 120%;\n  letter-spacing: 0.01em;\n`;\n\nconst CloseIcon = styled(Icon)`\n  position: absolute;\n  top: 25px;\n  right: 20px;\n\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.active};\n\n  cursor: pointer;\n`;\n\nexport const Content = styled.div`\n  padding: 0 16px;\n\n  ${up.tablet} {\n    padding: 0 20px;\n  }\n`;\n\nconst Footer = styled.div`\n  display: grid;\n  grid-auto-flow: row;\n  grid-gap: 16px;\n  margin-bottom: 16px;\n  padding: 0 16px;\n\n  ${up.tablet} {\n    grid-auto-flow: column;\n    padding: 20px;\n  }\n`;\n\nexport type ModalProps = {\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  footer?: React.ReactNode;\n  iconName?: string;\n  iconBgClassName?: string;\n\n  noDelimiter?: boolean;\n  close: () => void;\n  className?: string;\n};\n\nexport const Modal: FunctionComponent<ModalProps> = ({\n  title,\n  description,\n  footer,\n  iconName,\n  iconBgClassName,\n\n  noDelimiter,\n  close,\n  className,\n\n  children,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const isMobile = useIsMobile();\n  const location = useLocation();\n  const currentPath = useRef(location.pathname);\n\n  useEffect(() => {\n    if (isMobile && currentPath.current !== location.pathname) {\n      close();\n    }\n  }, [isMobile, location.pathname]);\n\n  useEffect(() => {\n    setIsOpen(true);\n\n    return () => {\n      setIsOpen(false);\n    };\n  }, []);\n\n  const config = useMemo(() => {\n    if (isMobile) {\n      return {\n        config: { duration: 600, easing: (t: number) => easing(t) },\n        from: { transform: 'translateY(100px)' },\n        enter: { transform: 'translateX(0)' },\n        leave: { transform: 'translateY(100px)' },\n      };\n    }\n\n    return {\n      // config: { duration: 600, easing: (t: number) => easing(t) },\n      // from: { transform: 'translateX(422px)' },\n      // enter: { transform: 'translateX(0)' },\n      // leave: { transform: 'translateX(422px)' },\n    };\n  }, [isMobile]);\n\n  const fadeTransition = useTransition(isOpen, null, config);\n\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: { mass: 1, tension: 210, friction: 20 } }));\n  const bind = useDrag((state) => {\n    set({\n      y: state.down ? state.movement[1] : 0,\n    });\n    if (\n      state.movement[1] > DRAG_MOVEMENT_THRESHOLD ||\n      (state.velocity[1] > DRAG_VELOCITY_THRESHOLD && state.direction[1] > 0)\n    ) {\n      close();\n    }\n  });\n\n  return (\n    <>\n      {fadeTransition.map(\n        ({ item, key, props }) =>\n          item && (\n            <StyledDialogContent\n              key={key}\n              {...(isMobile\n                ? {\n                    ...bind(),\n                    style: {\n                      ...props,\n                      transform: y.interpolate((n) => `translateY(${(n as number) > 0 ? n : 0}px)`),\n                    },\n                  }\n                : {\n                    style: props,\n                  })}\n              aria-label=\"dialog\"\n              className={className}\n            >\n              {isMobile ? <Handle /> : undefined}\n              {title || description ? (\n                <Header>\n                  {title ? <Title>{title}</Title> : undefined}\n                  {description ? <Description>{description}</Description> : undefined}\n                  {!isMobile ? <CloseIcon name=\"cross\" onClick={close} /> : undefined}\n                </Header>\n              ) : undefined}\n              {!noDelimiter ? (\n                <Delimiter className={classNames({ hasIcon: Boolean(iconName) })}>\n                  {iconName ? (\n                    <IconWrapper className={iconBgClassName}>\n                      <IconStyled name={iconName} />\n                    </IconWrapper>\n                  ) : undefined}\n                </Delimiter>\n              ) : undefined}\n              {children ? <Content>{children}</Content> : undefined}\n              {footer ? <Footer>{footer}</Footer> : undefined}\n            </StyledDialogContent>\n          ),\n      )}\n    </>\n  );\n};\n","import type { FC } from 'react';\nimport { useEffect, useState } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { theme, zIndexes } from '@p2p-wallet-web/ui';\nimport classNames from 'classnames';\n\nimport { Icon } from 'components/ui';\n\nimport { StatusColors, TransactionLabel } from '../styled';\n\nconst INITIAL_PROGRESS = 5;\n\nexport const ProgressIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.buttonPrimary};\n`;\n\nexport const TransactionStatus = styled.div`\n  display: flex;\n  align-items: center;\n\n  margin-top: 13px;\n  margin-left: 38px;\n\n  color: ${theme.colors.textIcon.primary};\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 140%;\n`;\n\nexport const TransactionBadge = styled.div`\n  display: flex;\n  align-items: center;\n\n  margin-left: 4px;\n  padding: 5px 12px;\n\n  color: ${theme.colors.textIcon.secondary};\n\n  font-weight: 500;\n  font-size: 12px;\n\n  background: ${theme.colors.bg.secondary};\n  border-radius: 4px;\n`;\n\nexport const ProgressWrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 55px;\n`;\n\nexport const ProgressLine = styled.div`\n  position: absolute;\n\n  left: 0;\n\n  z-index: ${zIndexes.middle};\n\n  width: ${INITIAL_PROGRESS}%;\n  height: 2px;\n\n  background: ${theme.colors.bg.buttonPrimary};\n\n  transition: width 0.15s;\n\n  &.isSuccess {\n    background: ${theme.colors.system.successMain};\n  }\n\n  &.isError {\n    background: ${theme.colors.system.errorMain};\n  }\n`;\n\nexport const ProgressStub = styled.div`\n  position: absolute;\n\n  left: 0;\n\n  z-index: ${zIndexes.bottom};\n\n  width: 100%;\n  height: 1px;\n\n  background: ${theme.colors.stroke.secondary};\n`;\n\nexport const BlockWrapper = styled(StatusColors)`\n  z-index: ${zIndexes.top};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 55px;\n  height: 55px;\n\n  border-radius: 40%;\n`;\n\nconst UPPER_PROGRESS_BOUND = 95;\nconst LOWER_PROGRESS_BOUND = 7;\nconst FULL_PROGRESS = 100;\nconst CHECK_PROGRESS_INTERVAL = 2500;\n\nexport interface Props {\n  isError: boolean;\n  isProcessing: boolean;\n  isSuccess: boolean;\n  isExecuting: boolean;\n  label: string;\n}\n\nexport const TransactionProgress: FC<Props> = (props) => {\n  const [progress, setProgress] = useState(INITIAL_PROGRESS);\n\n  useEffect(() => {\n    let newProgress = INITIAL_PROGRESS;\n\n    if (!props.isExecuting) {\n      return;\n    }\n\n    const timerId = setInterval(() => {\n      if (progress <= UPPER_PROGRESS_BOUND) {\n        newProgress += LOWER_PROGRESS_BOUND;\n        setProgress(newProgress);\n      } else {\n        newProgress = UPPER_PROGRESS_BOUND;\n        setProgress(newProgress);\n      }\n    }, CHECK_PROGRESS_INTERVAL);\n\n    return () => {\n      clearTimeout(timerId);\n      setProgress(FULL_PROGRESS);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.isExecuting]);\n\n  const renderStatus = (executing: boolean, success: boolean, error: boolean) => {\n    switch (true) {\n      case executing:\n        return 'Pending';\n      case error:\n        return 'Error';\n      case success:\n        return 'Completed';\n      default:\n        return 'Pending';\n    }\n  };\n\n  return (\n    <>\n      <ProgressWrapper>\n        <ProgressLine\n          style={{ width: `${progress}%` }}\n          className={classNames({\n            isSuccess: props.isSuccess,\n            isError: props.isError,\n          })}\n        />\n        <ProgressStub />\n\n        <BlockWrapper\n          className={classNames({\n            isProcessing: props.isProcessing,\n            isSuccess: props.isSuccess,\n            isError: props.isError,\n          })}\n        >\n          {props.isSuccess ? (\n            <ProgressIcon name=\"success-send\" />\n          ) : (\n            <ProgressIcon name={props.isError ? 'error-send' : 'clock-send'} />\n          )}\n        </BlockWrapper>\n      </ProgressWrapper>\n      <TransactionStatus>\n        {props.label}\n        <TransactionBadge>\n          <TransactionLabel\n            className={classNames({\n              isProcessing: props.isProcessing,\n              isSuccess: props.isSuccess,\n              isError: props.isError,\n            })}\n          />\n          {renderStatus(props.isExecuting, props.isSuccess, props.isError)}\n        </TransactionBadge>\n      </TransactionStatus>\n    </>\n  );\n};\n","import type { FC } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { theme } from '@p2p-wallet-web/ui';\nimport type { Network } from '@saberhq/solana-contrib';\n\nimport { Icon } from 'components/ui';\nimport type { TransactionID as TransactionIDType } from 'new/sdk/SolanaSDK';\nimport { getExplorerUrl, truncatingMiddle } from 'new/utils/StringExtensions';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  color: ${theme.colors.textIcon.secondary};\n`;\n\nconst ExplorerBlockLink = styled.a`\n  display: grid;\n  grid-gap: 4px;\n\n  color: inherit;\n  font-size: inherit;\n  text-align: right;\n  text-decoration: none;\n`;\n\nconst Address = styled.div`\n  display: flex;\n  align-items: center;\n\n  color: ${theme.colors.textIcon.primary};\n`;\n\nconst ExternalIcon = styled(Icon)`\n  width: 20px;\n  height: 20px;\n  margin-left: 4px;\n\n  color: ${theme.colors.textIcon.secondary};\n`;\n\ninterface Props {\n  transactionID: TransactionIDType;\n  network?: Network;\n}\n\nexport const TransactionID: FC<Props> = ({ transactionID, network = 'mainnet-beta' }) => {\n  return (\n    <Wrapper>\n      <div>Transaction ID</div>\n      <ExplorerBlockLink\n        href={getExplorerUrl('tx', transactionID, network)}\n        target=\"_blank\"\n        rel=\"noopener noreferrer noindex\"\n      >\n        <Address>\n          {truncatingMiddle(transactionID, {\n            numOfSymbolsRevealed: 9,\n            numOfSymbolsRevealedInSuffix: 9,\n          })}\n          <ExternalIcon name=\"external\" />\n        </Address>\n        <div>Tap to view in explorer</div>\n      </ExplorerBlockLink>\n    </Wrapper>\n  );\n};\n","import type { IReactionDisposer } from 'mobx';\nimport { action, computed, makeObservable, observable } from 'mobx';\nimport assert from 'ts-invariant';\nimport { injectable } from 'tsyringe';\n\nimport { PendingTransaction, TransactionStatus } from 'new/app/models/PendingTransaction';\nimport { ViewModel } from 'new/core/viewmodels/ViewModel';\nimport { SolanaSDKError } from 'new/sdk/SolanaSDK';\nimport type { TransactionIndex } from 'new/services/TransactionHandler';\nimport { TransactionHandler } from 'new/services/TransactionHandler';\n\nimport type { RawTransactionType } from './ProcessTransaction.Models';\n\ninterface ProcessTransactionModalViewModelType {\n  pendingTransaction: PendingTransaction | null;\n  observingTransactionIndex: number | null;\n}\n\n@injectable()\nexport class ProcessTransactionModalViewModel\n  extends ViewModel\n  implements ProcessTransactionModalViewModelType\n{\n  rawTransaction: RawTransactionType | null;\n  pendingTransaction: PendingTransaction | null;\n  observingTransactionIndex: TransactionIndex | null;\n\n  constructor(private _transactionHandler: TransactionHandler) {\n    super();\n\n    this.rawTransaction = null;\n    this.pendingTransaction = null;\n    this.observingTransactionIndex = null;\n\n    makeObservable(this, {\n      rawTransaction: observable,\n      pendingTransaction: observable,\n      observingTransactionIndex: observable,\n\n      setTransaction: action,\n\n      isSwapping: computed,\n      transactionID: computed,\n      getMainDescription: computed,\n\n      sendAndObserveTransaction: action,\n    });\n  }\n\n  setTransaction(processingTransaction: RawTransactionType) {\n    this.rawTransaction = processingTransaction;\n    this.pendingTransaction = new PendingTransaction({\n      transactionId: null,\n      sentAt: new Date(),\n      rawTransaction: processingTransaction,\n      status: TransactionStatus.sending(),\n    });\n  }\n\n  protected override setDefaults() {\n    this.rawTransaction = null;\n    this.pendingTransaction = null;\n    this.observingTransactionIndex = null;\n  }\n\n  protected override onInitialize() {}\n\n  protected override afterReactionsRemoved() {}\n\n  get isSwapping(): boolean {\n    assert(this.rawTransaction, 'rawTransaction is not set');\n    return this.rawTransaction.isSwap;\n  }\n\n  get transactionID(): string | null {\n    assert(this.pendingTransaction, 'pendingTransaction is not set');\n    return this.pendingTransaction.transactionId;\n  }\n\n  get getMainDescription(): string {\n    assert(this.rawTransaction, 'rawTransaction is not set');\n    return this.rawTransaction.mainDescription;\n  }\n\n  // Actions\n\n  sendAndObserveTransaction(): IReactionDisposer {\n    assert(this.rawTransaction, 'rawTransaction is not set');\n    // send transaction and get observation index\n    const index = this._transactionHandler.sendTransaction(this.rawTransaction);\n    this.observingTransactionIndex = index;\n\n    // send and catch error\n    const unknownErrorInfo = new PendingTransaction({\n      transactionId: null,\n      sentAt: new Date(),\n      rawTransaction: this.rawTransaction,\n      status: TransactionStatus.error(SolanaSDKError.unknown()),\n    });\n\n    // observe transaction based on transaction index\n    return this._transactionHandler.observeTransaction(index, (pendingTransaction) => {\n      this.pendingTransaction = pendingTransaction || unknownErrorInfo;\n    });\n  }\n}\n","import type { FC } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { observer } from 'mobx-react-lite';\nimport { expr } from 'mobx-utils';\n\nimport { TransactionStatusType } from 'new/app/models/PendingTransaction';\nimport { FeeRelayerError } from 'new/sdk/FeeRelayer';\n\nimport * as ProcessTransaction from '../../ProcessTransaction.Models';\nimport type { ProcessTransactionModalViewModel } from '../../ProcessTransactionModal.ViewModel';\n\nconst Wrapper = styled.div`\n  padding: 0 30px;\n`;\n\ninterface Props {\n  viewModel: Readonly<ProcessTransactionModalViewModel>;\n}\n\nexport const HeaderLabel: FC<Props> = observer(({ viewModel }) => {\n  const text = expr(() => {\n    const info = viewModel.pendingTransaction;\n    if (!info) {\n      return '';\n    }\n\n    const originalText = info.rawTransaction.isSwap\n      ? 'The swap is being processed'\n      : 'The transaction is being processed';\n\n    switch (info.status.type) {\n      case TransactionStatusType.sending:\n      case TransactionStatusType.confirmed:\n        return originalText;\n      case TransactionStatusType.error: {\n        // TODO: check all condition works\n        const error = info.status.error;\n        if (error) {\n          if (error.message.includes('Swap instruction exceeds desired slippage limit')) {\n            return 'Low slippage caused the swap to fail';\n          }\n\n          if (\n            error instanceof FeeRelayerError &&\n            error.code === FeeRelayerError.topUpSuccessButTransactionThrows().code\n          ) {\n            return 'The transaction failed due to a blockchain error';\n          }\n        }\n        return 'The transaction has been rejected';\n      }\n      case TransactionStatusType.finalized: {\n        // TODO: check all condition works\n        const transaction = info.rawTransaction;\n        if (transaction instanceof ProcessTransaction.SendTransaction) {\n          return `${transaction.sender.token.symbol} was sent successfully`;\n        }\n\n        if (transaction instanceof ProcessTransaction.SwapTransaction) {\n          return `${transaction.sourceWallet.token.symbol} → ${transaction.destinationWallet.token.symbol} swapped successfully`;\n        }\n\n        throw Error('fatal');\n      }\n    }\n  });\n\n  return <Wrapper>{text}</Wrapper>;\n});\n","import type { FC } from 'react';\nimport { useEffect, useState } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { theme, zIndexes } from '@p2p-wallet-web/ui';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react-lite';\n\nimport { Icon } from 'components/ui';\nimport { TransactionStatusType } from 'new/app/models/PendingTransaction';\nimport type { SendTransaction } from 'new/ui/modals/ProcessTransactionModal';\n\nimport type { ProcessTransactionModalViewModel } from '../../ProcessTransactionModal.ViewModel';\n\nconst INITIAL_PROGRESS = 5;\n\nconst ProgressIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.buttonPrimary};\n`;\n\n// const TransactionStatus = styled.div`\n//   display: flex;\n//   align-items: center;\n//\n//   margin-top: 13px;\n//   margin-left: 38px;\n//\n//   color: ${theme.colors.textIcon.primary};\n//\n//   font-weight: 500;\n//   font-size: 16px;\n//   line-height: 140%;\n// `;\n//\n// const TransactionBadge = styled.div`\n//   display: flex;\n//   align-items: center;\n//\n//   height: 24px;\n//   margin-left: 4px;\n//   padding: 0 8px;\n//\n//   color: ${theme.colors.textIcon.secondary};\n//\n//   font-weight: 500;\n//   font-size: 12px;\n//\n//   background: ${theme.colors.bg.secondary};\n//   border-radius: 4px;\n// `;\n\nconst ProgressWrapper = styled.div`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 55px;\n`;\n\nconst ProgressLine = styled.div`\n  position: absolute;\n\n  left: 0;\n\n  z-index: ${zIndexes.middle};\n\n  width: ${INITIAL_PROGRESS}%;\n  height: 2px;\n\n  background: ${theme.colors.bg.buttonPrimary};\n\n  transition: width 0.15s;\n\n  &.isSuccess {\n    background: ${theme.colors.system.successMain};\n\n    transition: none;\n  }\n\n  &.isError {\n    background: ${theme.colors.system.errorMain};\n\n    transition: none;\n  }\n`;\n\nconst ProgressStub = styled.div`\n  position: absolute;\n\n  left: 0;\n\n  z-index: ${zIndexes.bottom};\n\n  width: 100%;\n  height: 1px;\n\n  background: ${theme.colors.stroke.secondary};\n`;\n\nconst StatusColors = styled.div`\n  &.isProcessing {\n    background: ${theme.colors.system.warningMain};\n  }\n\n  &.isSuccess {\n    background: ${theme.colors.system.successMain};\n  }\n\n  &.isError {\n    background: ${theme.colors.system.errorMain};\n  }\n`;\n\n// const TransactionLabel = styled(StatusColors)`\n//   display: block;\n//   width: 8px;\n//   height: 8px;\n//\n//   margin-right: 8px;\n// `;\n\nconst BlockWrapper = styled(StatusColors)`\n  z-index: ${zIndexes.top};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 55px;\n  height: 55px;\n\n  border-radius: 40%;\n`;\n\nconst UPPER_PROGRESS_BOUND = 95;\nconst LOWER_PROGRESS_BOUND = 3;\nconst FULL_PROGRESS = 100;\nconst CHECK_PROGRESS_INTERVAL = 1000;\n\nexport interface Props {\n  viewModel: Readonly<ProcessTransactionModalViewModel>;\n  // label: string;\n}\n\nexport const ProgressView: FC<Props> = observer(({ viewModel /*label*/ }) => {\n  const [progress, setProgress] = useState(INITIAL_PROGRESS);\n\n  const status = viewModel.pendingTransaction!.status;\n  const isSending = status.type === TransactionStatusType.sending;\n  const isProcessing = status.type === TransactionStatusType.confirmed;\n  const isSuccess = status.type === TransactionStatusType.finalized;\n  const isError = status.type === TransactionStatusType.error;\n\n  useEffect(() => {\n    let newProgress = INITIAL_PROGRESS;\n\n    if (\n      !(\n        isProcessing ||\n        // start ProgressBar ticking on isSending when it's send RenBTC via Bitcoin Network transaction\n        (isSending &&\n          (viewModel.pendingTransaction?.rawTransaction as SendTransaction)\n            .isRenBTCViaBitcoinNetwork)\n      )\n    ) {\n      return;\n    }\n\n    const timerId = setInterval(() => {\n      if (progress <= UPPER_PROGRESS_BOUND) {\n        newProgress += LOWER_PROGRESS_BOUND;\n        setProgress(newProgress);\n      } else {\n        newProgress = UPPER_PROGRESS_BOUND;\n        setProgress(newProgress);\n      }\n    }, CHECK_PROGRESS_INTERVAL);\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [status.type]);\n\n  useEffect(() => {\n    switch (status.type) {\n      case TransactionStatusType.error:\n      case TransactionStatusType.finalized:\n        setProgress(FULL_PROGRESS);\n        setTimeout(() => {\n          setProgress(0);\n        }, 1000);\n        break;\n    }\n  }, [status.type]);\n\n  // const renderStatus = () => {\n  //   switch (status.type) {\n  //     case TransactionStatusType.sending:\n  //     case TransactionStatusType.confirmed:\n  //       return 'Pending';\n  //     case TransactionStatusType.error:\n  //       return 'Error';\n  //     case TransactionStatusType.finalized:\n  //       return 'Completed';\n  //   }\n  // };\n\n  return (\n    <>\n      <ProgressWrapper>\n        <ProgressLine\n          style={{ width: `${progress}%` }}\n          className={classNames({ isSuccess, isError })}\n        />\n        <ProgressStub />\n\n        <BlockWrapper\n          className={classNames({ isProcessing: isSending || isProcessing, isSuccess, isError })}\n        >\n          {isSuccess ? (\n            <ProgressIcon name=\"success-send\" />\n          ) : (\n            <ProgressIcon name={isError ? 'error-send' : 'clock-send'} />\n          )}\n        </BlockWrapper>\n      </ProgressWrapper>\n      {/*<TransactionStatus>*/}\n      {/*  {label}*/}\n      {/*  <TransactionBadge>*/}\n      {/*    <TransactionLabel*/}\n      {/*      className={classNames({ isProcessing: isSending || isProcessing, isSuccess, isError })}*/}\n      {/*    />*/}\n      {/*    {renderStatus()}*/}\n      {/*  </TransactionBadge>*/}\n      {/*</TransactionStatus>*/}\n    </>\n  );\n});\n","import type { FC } from 'react';\nimport { useLayoutEffect } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { theme } from '@p2p-wallet-web/ui';\nimport { observer } from 'mobx-react-lite';\n\n// TODO: relocate\nimport {\n  CloseIcon,\n  CloseWrapper,\n  Header,\n  WrapperModal,\n} from 'components/modals/TransactionInfoModals/common';\nimport { Button } from 'components/ui';\nimport { useViewModel } from 'new/core/viewmodels/useViewModel';\nimport type { ModalPropsType } from 'new/ui/managers/ModalManager';\nimport { TransactionID } from 'new/ui/modals/ProcessTransactionModal/Status/TransactionID';\n\nimport type { RawTransactionType, SendTransaction } from './ProcessTransaction.Models';\nimport { ProcessTransactionModalViewModel } from './ProcessTransactionModal.ViewModel';\nimport { HeaderLabel } from './Status/HeaderLabel';\nimport { ProgressView } from './Status/ProgressView';\n\nconst PaddedHeader = styled(Header)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 12px 20px;\n`;\n\nconst Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 18px 20px;\n`;\n\nconst Description = styled.div`\n  display: flex;\n  justify-content: center;\n\n  color: ${theme.colors.textIcon.secondary};\n\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 120%;\n`;\n\nexport interface ProcessTransactionModalProps {\n  transaction: RawTransactionType;\n}\n\n// TODO: Green alert (shown only when top up is finished but transaction is not)\nexport const ProcessTransactionModal: FC<ProcessTransactionModalProps & ModalPropsType> = observer(\n  ({ close, transaction }) => {\n    const viewModel = useViewModel(ProcessTransactionModalViewModel);\n    // set transaction before, to available all getters under\n    if (!viewModel.rawTransaction) {\n      viewModel.setTransaction(transaction);\n    }\n\n    useLayoutEffect(() => {\n      return viewModel.sendAndObserveTransaction();\n    }, []);\n\n    const handleCloseClick = () => {\n      close(false);\n    };\n\n    const showExplorerLink =\n      viewModel.transactionID &&\n      !(viewModel.rawTransaction as SendTransaction).isRenBTCViaBitcoinNetwork;\n\n    return (\n      <WrapperModal close={handleCloseClick}>\n        <PaddedHeader>\n          <HeaderLabel viewModel={viewModel} />\n          {/*{viewModel.getMainDescription}*/}\n          <CloseWrapper onClick={handleCloseClick}>\n            <CloseIcon name=\"close\" />\n          </CloseWrapper>\n          <Description>{viewModel.getMainDescription}</Description>\n          {/*<DateView viewModel={viewModel} />*/}\n        </PaddedHeader>\n        <ProgressView viewModel={viewModel} /*label={'Swap status:'}*/ />\n        {/*<Section>*/}\n        {/*  {viewModel.observingTransactionIndex !== null &&*/}\n        {/*  typeof viewModel.observingTransactionIndex !== 'undefined' ? (*/}\n        {/*    <TransactionDetail observingTransactionIndex={viewModel.observingTransactionIndex} />*/}\n        {/*  ) : null}*/}\n        {/*</Section>*/}\n        {showExplorerLink ? (\n          <Section>\n            <TransactionID transactionID={viewModel.transactionID} />\n          </Section>\n        ) : null}\n        <Section>\n          <Button primary onClick={handleCloseClick}>\n            Done\n          </Button>\n        </Section>\n        {/*{viewModel.transactionID ? (*/}\n        {/*  <SolanaExplorerLink signature={viewModel.transactionID} />*/}\n        {/*) : null}*/}\n      </WrapperModal>\n    );\n  },\n);\n","import { styled } from '@linaria/react';\n\nimport { Modal } from 'components/ui/Modal';\n\nexport const WrapperModal = styled(Modal)`\n  flex-basis: 524px;\n`;\n\nexport const Section = styled.div`\n  display: grid;\n  grid-gap: 24px;\n  padding: 16px 0 24px;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-gap: 16px;\n  margin: 0;\n  padding-left: 32px;\n  padding-right: 16px;\n`;\n\nexport const Row = styled.li``;\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100%;\n`;\n","import type { FC } from 'react';\nimport * as React from 'react';\n\nimport { styled } from '@linaria/react';\n\nimport { Button, Icon } from 'components/ui';\n\nconst CancelIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n`;\n\ntype Props = React.ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport const ButtonCancel: FC<Props> = (props) => {\n  return (\n    <Button {...props} hollow error>\n      <CancelIcon name=\"cross\" />\n      Cancel\n    </Button>\n  );\n};\n","import type { FC } from 'react';\n\nimport { observer } from 'mobx-react-lite';\nimport { expr } from 'mobx-utils';\n\nimport { Button } from 'components/ui';\nimport { Loader } from 'new/ui/components/common/Loader';\nimport type { ModalPropsType } from 'new/ui/managers/ModalManager';\nimport type { ReceiveBitcoinModalViewModel } from 'new/ui/modals/ReceiveBitcoinModal/ReceiveBitcoinModal.ViewModel';\nimport { numberToString } from 'new/utils/NumberExtensions';\n\ninterface Props {\n  viewModel: Readonly<ReceiveBitcoinModalViewModel>;\n}\n\nexport const RenBTCButton: FC<Props & ModalPropsType> = observer(({ viewModel, close }) => {\n  const buttonText = expr(() => {\n    const fee = viewModel.totalFee;\n    const wallet = viewModel.payingWallet;\n    if (!fee || !wallet || fee <= 0) {\n      return 'Continue';\n    }\n\n    return `Pay ${numberToString(fee, { maximumFractionDigits: 9 })} ${\n      wallet.token.symbol\n    } & Continue`;\n  });\n\n  const handleClick = async () => {\n    try {\n      await viewModel.createRenBTC();\n      close(true);\n    } catch {\n      //\n    }\n  };\n\n  return (\n    <Button primary disabled={viewModel.isLoading} onClick={handleClick}>\n      {viewModel.isLoading ? <Loader /> : buttonText}\n    </Button>\n  );\n});\n","import type { FC } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { theme } from '@p2p-wallet-web/ui';\nimport { observer } from 'mobx-react-lite';\n\nimport { Defaults } from 'new/services/Defaults';\nimport { TokenAvatar } from 'new/ui/components/common/TokenAvatar';\nimport type { ReceiveBitcoinModalViewModel } from 'new/ui/modals/ReceiveBitcoinModal/ReceiveBitcoinModal.ViewModel';\nimport { numberToString } from 'new/utils/NumberExtensions';\n\nconst SelectorValue = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nconst TokenAvatarStyled = styled(TokenAvatar)`\n  margin-right: 12px;\n`;\n\nconst Fees = styled.div`\n  flex-grow: 1;\n`;\n\nconst Top = styled.div``;\n\nconst Label = styled.span`\n  margin-right: 4px;\n\n  color: ${theme.colors.textIcon.secondary};\n  font-weight: 500;\n\n  &.primary {\n    color: ${theme.colors.textIcon.primary};\n    font-size: 16px;\n  }\n`;\n\nconst LabelWrapper = styled.div`\n  display: grid;\n  grid-row-gap: 2px;\n`;\n\ninterface Props {\n  viewModel: Readonly<ReceiveBitcoinModalViewModel>;\n}\n\nexport const WalletSelectorContent: FC<Props> = observer(({ viewModel }) => {\n  return (\n    <SelectorValue>\n      <TokenAvatarStyled token={viewModel.payingWallet?.token} size={44} />\n      <Fees>\n        <Top>\n          <LabelWrapper>\n            <Label>\n              Account creation fee:{' '}\n              <Label className=\"primary\">\n                ~{Defaults.fiat.symbol}\n                {numberToString(viewModel.feeInFiat ?? 0, { maximumFractionDigits: 2 })}\n              </Label>\n            </Label>\n            <Label className=\"primary\">{viewModel.feeInText}</Label>\n          </LabelWrapper>\n        </Top>\n      </Fees>\n    </SelectorValue>\n  );\n});\n","import type { FC } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { theme } from '@p2p-wallet-web/ui';\nimport { observer } from 'mobx-react-lite';\n\nimport { ButtonCancel } from 'components/common/ButtonCancel';\nimport type { Wallet } from 'new/sdk/SolanaSDK';\nimport { ChooseWallet } from 'new/ui/components/common/ChooseWallet';\nimport type { ModalPropsType } from 'new/ui/managers/ModalManager';\n\nimport { List, Row, Section, WrapperModal } from '../common/styled';\nimport type { ReceiveBitcoinModalViewModel } from '../ReceiveBitcoinModal.ViewModel';\nimport { RenBTCButton } from './RenBTCButton';\nimport { WalletSelectorContent } from './WalletSelectorContent';\n\nconst ChooseWalletStyled = styled(ChooseWallet)`\n  padding: 12px 20px;\n\n  border: 1px solid ${theme.colors.stroke.secondary};\n  border-radius: 12px;\n`;\n\ninterface Props {\n  viewModel: Readonly<ReceiveBitcoinModalViewModel>;\n}\n\n// TODO: show error\nexport const Create: FC<Props & ModalPropsType> = observer(({ viewModel, close }) => {\n  const handleWalletChange = (wallet: Wallet) => {\n    viewModel.walletDidSelect(wallet);\n  };\n\n  return (\n    <WrapperModal\n      title=\"Create Bitcoin address\"\n      iconName=\"clock\"\n      iconBgClassName=\"warning\"\n      close={() => close(false)}\n      footer={\n        <>\n          <RenBTCButton viewModel={viewModel} close={close} />\n          <ButtonCancel onClick={() => close(false)} />\n        </>\n      }\n    >\n      <Section>\n        <List>\n          <Row>\n            Your wallet list does not contain a renBTC account, and to create one{' '}\n            <strong>you need to make a transaction</strong>. You can choose which currency to pay in\n            below.\n          </Row>\n        </List>\n        <div style={{ position: 'relative' }}>\n          <ChooseWalletStyled\n            viewModel={viewModel.choosePayingWalletViewModel}\n            selector={<WalletSelectorContent viewModel={viewModel} />}\n            selectedWallet={viewModel.payingWallet}\n            onWalletChange={handleWalletChange}\n            staticWallets={viewModel.payableWallets}\n            showOtherWallets={false}\n          />\n        </div>\n        <List>\n          <Row>\n            You're going to create a public Bitcoin address that will be valid for the next{' '}\n            <strong>24 hours</strong>. You still can hold and send Bitcoin without restrictions.\n          </Row>\n          <Row>\n            It's a <strong>one-time address</strong>, so if you send multiple transactions, your\n            money will be lost.\n          </Row>\n        </List>\n      </Section>\n    </WrapperModal>\n  );\n});\n","import { ZERO } from '@orca-so/sdk';\nimport { SPLToken } from '@saberhq/token-utils';\nimport { u64 } from '@solana/spl-token';\nimport { PublicKey } from '@solana/web3.js';\nimport { zip } from 'ramda';\nimport { injectable } from 'tsyringe';\n\nimport {\n  FeeRelayerAPIClient,\n  FeeRelayerConfiguration,\n  FeeRelayerContextManager,\n  FeeRelayerRelaySolanaClient,\n  StatsInfoOperationType,\n  TokenAccount,\n} from 'new/sdk/FeeRelayer';\nimport {\n  AccountInfo,\n  FeeAmount,\n  getAssociatedTokenAddressSync,\n  SolanaSDKPublicKey,\n  Token,\n  Wallet,\n} from 'new/sdk/SolanaSDK';\nimport { OrcaSwapService } from 'new/services/OrcaSwapService';\nimport { RelayService } from 'new/services/RelayService';\nimport { WalletsRepository } from 'new/services/Repositories';\n\n@injectable()\nexport class RenBTCStatusService {\n  private _feeRelayerContextManager: FeeRelayerContextManager;\n\n  private _minRentExemption?: u64;\n  private _lamportsPerSignature?: u64;\n  private _rentExemptMinimum?: u64;\n\n  constructor(\n    private _feeRelayerAPIClient: FeeRelayerRelaySolanaClient,\n    private _orcaSwap: OrcaSwapService,\n    private _walletsRepository: WalletsRepository,\n    private _feeRelayer: RelayService,\n  ) {\n    const feeRelayerAPIClient = new FeeRelayerAPIClient();\n    this._feeRelayerContextManager = new FeeRelayerContextManager({\n      owner: this._feeRelayerAPIClient.provider.wallet.publicKey,\n      solanaAPIClient: this._feeRelayerAPIClient,\n      feeRelayerAPIClient,\n    });\n  }\n\n  async load() {\n    await this._orcaSwap.load();\n\n    this._minRentExemption = await this._feeRelayerAPIClient.getMinimumBalanceForRentExemption(\n      AccountInfo.span,\n    );\n    this._lamportsPerSignature = await this._feeRelayerAPIClient.getLamportsPerSignature();\n    this._rentExemptMinimum = await this._feeRelayerAPIClient.getMinimumBalanceForRentExemption(0);\n  }\n\n  async getPayableWallets(): Promise<Wallet[]> {\n    const wallets = this._walletsRepository\n      .getWallets()\n      .filter((wallet) => wallet.lamports?.gt(ZERO));\n\n    // At lease one wallet is payable\n    const group = await Promise.all(\n      wallets.map((w): Promise<u64 | null> => this.getCreationFee(w.mintAddress).catch(() => null)),\n    );\n\n    const walletsNew: Wallet[] = [];\n    for (const [w, fee] of zip(wallets, group)) {\n      if (fee && fee.lte(w.lamports ?? ZERO)) {\n        // Special case where wallet is native sol,\n        // needs to keeps rentExemptMinimum lamports in account to prevent error\n        // Transaction leaves an account with a lower balance than rent-exempt minimum\n        if (w.isNativeSOL && (w.lamports ?? ZERO).sub(fee).lt(this._rentExemptMinimum ?? ZERO)) {\n          continue;\n        } else {\n          walletsNew.push(w);\n        }\n      }\n    }\n    return walletsNew;\n  }\n\n  async createAccount(_address: string, _mint: string): Promise<void> {\n    const address = new PublicKey(_address);\n    const mint = new PublicKey(_mint);\n    const owner = this._feeRelayerAPIClient.provider.wallet.publicKey;\n\n    const associatedAccount = getAssociatedTokenAddressSync(SolanaSDKPublicKey.renBTCMint, owner);\n\n    // prepare transaction\n    const feePayer = (await this._feeRelayerContextManager.getCurrentContext()).feePayerAddress;\n    const preparing = this._feeRelayerAPIClient.prepareTransaction({\n      instructions: [\n        SPLToken.createAssociatedTokenAccountInstruction(\n          SolanaSDKPublicKey.splAssociatedTokenAccountProgramId,\n          SolanaSDKPublicKey.tokenProgramId,\n          SolanaSDKPublicKey.renBTCMint,\n          associatedAccount,\n          owner,\n          feePayer,\n        ),\n      ],\n      feePayer,\n    });\n\n    const updating = this._feeRelayerContextManager.update();\n\n    const [preparedTransaction] = await Promise.all([preparing, updating]);\n\n    // hack\n    preparedTransaction.owner = owner;\n\n    const context = await this._feeRelayerContextManager.getCurrentContext();\n    const tx = await this._feeRelayer.topUpAndRelayTransaction({\n      context,\n      transaction: preparedTransaction,\n      fee: new TokenAccount({ address: address, mint: mint }),\n      config: new FeeRelayerConfiguration({\n        operationType: StatsInfoOperationType.transfer,\n        currency: mint.toBase58(),\n      }),\n    });\n\n    await this._feeRelayerAPIClient.waitForConfirmation(tx);\n\n    this._walletsRepository.batchUpdate((wallets) => {\n      const string = wallets.find((wallet) => wallet.token.isNativeSOL)?.pubkey;\n      if (!string) {\n        return wallets;\n      }\n      const nativeWalletAddress = new PublicKey(string);\n      const renBTCAddress = getAssociatedTokenAddressSync(\n        SolanaSDKPublicKey.renBTCMint,\n        nativeWalletAddress,\n      );\n\n      if (!wallets.some((wallet) => wallet.pubkey === SolanaSDKPublicKey.renBTCMint.toString())) {\n        wallets.push(\n          new Wallet({\n            pubkey: renBTCAddress.toBase58(),\n            lamports: ZERO,\n            token: Token.renBTC,\n          }),\n        );\n      }\n\n      return wallets;\n    });\n  }\n\n  async getCreationFee(_mintAddress: string): Promise<u64> {\n    const mintAddress = new PublicKey(_mintAddress);\n\n    const feeAmount = new FeeAmount({\n      transaction: this._lamportsPerSignature ?? new u64(5000),\n      accountBalances: this._minRentExemption ?? new u64(2_039_280),\n    });\n\n    const feeInSOL = this._feeRelayer.feeCalculator.calculateNeededTopUpAmount({\n      context: await this._feeRelayerContextManager.getCurrentContext(),\n      expectedFee: feeAmount,\n      payingTokenMint: mintAddress,\n    });\n\n    const feeInToken = await this._feeRelayer.feeCalculator.calculateFeeInPayingToken({\n      orcaSwap: this._orcaSwap,\n      feeInSOL: feeInSOL,\n      payingFeeTokenMint: mintAddress,\n    });\n\n    return feeInToken.total;\n  }\n}\n","import { action, computed, makeObservable, observable, reaction, runInAction } from 'mobx';\nimport { singleton } from 'tsyringe';\n\nimport { ViewModel } from 'new/core/viewmodels/ViewModel';\nimport type { Wallet } from 'new/sdk/SolanaSDK';\nimport { convertToBalance } from 'new/sdk/SolanaSDK';\nimport { PricesService } from 'new/services/PriceAPIs/PricesService';\nimport { WalletsRepository } from 'new/services/Repositories';\nimport { ChooseWalletViewModel } from 'new/ui/components/common/ChooseWallet';\nimport { numberToString } from 'new/utils/NumberExtensions';\n\nimport { RenBTCStatusService } from './RenBTCStatusService';\n\nexport enum RenBTCAccountStatus {\n  topUpRequired = 'topUpRequired',\n  payingWalletAvailable = 'payingWalletAvailable',\n}\n\ninterface ReceiveBitcoinModalViewModelType {\n  readonly solanaPubkey: string | null;\n  readonly isLoading: boolean;\n  readonly error: string | null;\n  readonly accountStatus: RenBTCAccountStatus | null;\n  readonly payingWallet: Wallet | null;\n  readonly totalFee: number | null;\n  readonly feeInFiat: number | null;\n\n  reload(): void;\n  createRenBTC(): void;\n}\n\n@singleton()\nexport class ReceiveBitcoinModalViewModel\n  extends ViewModel\n  implements ReceiveBitcoinModalViewModelType\n{\n  isLoading = true;\n  error: string | null = null;\n  accountStatus: RenBTCAccountStatus | null = null;\n  payableWallets: Wallet[] = [];\n\n  payingWallet: Wallet | null = null;\n  totalFee: number | null = null;\n  feeInFiat: number | null = null;\n\n  constructor(\n    private _renBTCStatusService: RenBTCStatusService,\n    private _priceService: PricesService,\n    private _walletsRepository: WalletsRepository,\n    public choosePayingWalletViewModel: ChooseWalletViewModel,\n  ) {\n    super();\n\n    makeObservable(this, {\n      isLoading: observable,\n      error: observable,\n      accountStatus: observable,\n      payableWallets: observable,\n\n      payingWallet: observable,\n      totalFee: observable,\n      feeInFiat: observable,\n\n      solanaPubkey: computed,\n      feeInText: computed,\n\n      reload: action,\n      walletDidSelect: action,\n      createRenBTC: action,\n    });\n  }\n\n  protected override setDefaults(): void {\n    this.isLoading = false;\n    this.accountStatus = null;\n    this.payableWallets = [];\n    this.payingWallet = null;\n\n    this.totalFee = null;\n    this.feeInFiat = null;\n  }\n\n  protected override onInitialize(): void {\n    this.choosePayingWalletViewModel.initialize();\n\n    void this.reload();\n    void this._bind();\n  }\n\n  protected override afterReactionsRemoved(): void {\n    this.choosePayingWalletViewModel.end();\n  }\n\n  get solanaPubkey(): string | null {\n    return this._walletsRepository.nativeWallet?.pubkey ?? null;\n  }\n\n  get feeInText(): string | null {\n    const fee = this.totalFee;\n    const wallet = this.payingWallet;\n    if (!fee || !wallet) {\n      return null;\n    }\n    return `${numberToString(fee, { maximumFractionDigits: 9 })} ${wallet.token.symbol}`;\n  }\n\n  // Methods\n\n  async reload(): Promise<void> {\n    this.isLoading = true;\n    this.error = null;\n    this.accountStatus = null;\n    this.payableWallets = [];\n    this.payingWallet = null;\n\n    try {\n      await this._renBTCStatusService.load();\n      const payableWallets = await this._renBTCStatusService.getPayableWallets();\n\n      runInAction(() => {\n        this.error = null;\n        this.accountStatus = payableWallets.length\n          ? RenBTCAccountStatus.payingWalletAvailable\n          : RenBTCAccountStatus.topUpRequired;\n        this.payableWallets = payableWallets;\n        this.payingWallet = payableWallets[0] ?? null;\n      });\n    } catch (error) {\n      runInAction(() => {\n        console.error(error);\n        this.error = (error as Error).message;\n        this.accountStatus = null;\n        this.payableWallets = [];\n        this.payingWallet = null;\n      });\n    } finally {\n      runInAction(() => {\n        this.isLoading = false;\n      });\n    }\n  }\n\n  private _bind(): void {\n    this.addReaction(\n      reaction(\n        () => this.payingWallet,\n        async (wallet) => {\n          if (!wallet) {\n            this.totalFee = null;\n            return;\n          }\n          try {\n            const fee = await this._renBTCStatusService.getCreationFee(wallet.mintAddress);\n            runInAction(() => {\n              this.totalFee = convertToBalance(fee, wallet.token.decimals);\n            });\n          } catch {\n            runInAction(() => {\n              this.totalFee = null;\n            });\n          }\n        },\n      ),\n    );\n\n    this.addReaction(\n      reaction(\n        () => this.totalFee,\n        (fee) => {\n          const symbol = this.payingWallet?.token.symbol;\n          if (!fee || !symbol) {\n            this.feeInFiat = null;\n            return;\n          }\n          const price = this._priceService.currentPrice(symbol)?.value;\n          if (!price) {\n            this.feeInFiat = null;\n            return;\n          }\n          this.feeInFiat = fee * price;\n        },\n      ),\n    );\n  }\n\n  walletDidSelect(wallet: Wallet): void {\n    this.payingWallet = wallet;\n  }\n\n  async createRenBTC(): Promise<void> {\n    const mintAddress = this.payingWallet?.mintAddress;\n    const address = this.payingWallet?.pubkey;\n    if (!mintAddress || !address) {\n      return;\n    }\n\n    this.isLoading = true;\n    this.error = null;\n\n    try {\n      await this._renBTCStatusService.createAccount(address, mintAddress);\n      this.error = null;\n    } catch (error) {\n      console.error(error);\n      this.error = (error as Error).message;\n      throw error;\n    } finally {\n      this.isLoading = false;\n    }\n  }\n}\n","import type { FC } from 'react';\nimport { useHistory } from 'react-router';\n\nimport { styled } from '@linaria/react';\n\nimport { Icon } from 'components/ui';\nimport { ButtonCancel } from 'new/ui/components/common/ButtonCancel';\nimport { Button } from 'new/ui/components/ui/Button';\nimport type { ModalPropsType } from 'new/ui/managers/ModalManager';\n\nimport { List, Row, Section, WrapperModal } from '../common/styled';\n\nconst IconStyled = styled(Icon)`\n  margin-right: 8px;\n`;\n\nexport const TopUp: FC<ModalPropsType> = ({ close }) => {\n  const history = useHistory();\n\n  const handleTopUpClick = () => {\n    close(false);\n    history.push('/buy');\n  };\n\n  return (\n    <WrapperModal\n      title=\"Create Bitcoin address\"\n      iconName=\"clock\"\n      iconBgClassName=\"warning\"\n      close={() => close(false)}\n      footer={\n        <>\n          <Button primary onClick={handleTopUpClick}>\n            <IconStyled name={'plus'} size={24} />\n            Top up your account\n          </Button>\n          <ButtonCancel onClick={() => close(false)} />\n        </>\n      }\n    >\n      <Section>\n        <List>\n          <Row>\n            A <strong>renBTC account is required</strong> to receive bitcoins over the Bitcoin\n            network.\n          </Row>\n          <Row>\n            Your wallet list does not contain a renBTC account, and to create one{' '}\n            <strong>you need to make a transaction</strong>.\n          </Row>\n          <Row>\n            You <strong>don't have funds</strong> to pay for account creation, but if someone sends\n            renBTC to your address, it will be created for you.\n          </Row>\n        </List>\n      </Section>\n    </WrapperModal>\n  );\n};\n","import type { FC } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { observer } from 'mobx-react-lite';\n\nimport { useViewModel } from 'new/core/viewmodels/useViewModel';\nimport { Loader } from 'new/ui/components/common/Loader';\nimport type { ModalPropsType } from 'new/ui/managers/ModalManager';\n\nimport { LoaderWrapper, WrapperModal } from './common/styled';\nimport { Create } from './Create';\nimport { ReceiveBitcoinModalViewModel, RenBTCAccountStatus } from './ReceiveBitcoinModal.ViewModel';\nimport { TopUp } from './TopUp';\n\nconst LoaderWrapperStyled = styled(LoaderWrapper)`\n  height: 300px;\n`;\n\nexport const ReceiveBitcoinModal: FC<ModalPropsType> = observer(({ close }) => {\n  const viewModel = useViewModel(ReceiveBitcoinModalViewModel);\n\n  if (viewModel.isLoading || !viewModel.accountStatus) {\n    return (\n      <WrapperModal close={() => close(false)}>\n        <LoaderWrapperStyled>\n          <Loader size=\"100\" />\n        </LoaderWrapperStyled>\n      </WrapperModal>\n    );\n  }\n\n  switch (viewModel.accountStatus) {\n    case RenBTCAccountStatus.topUpRequired:\n      return <TopUp close={close} />;\n    case RenBTCAccountStatus.payingWalletAvailable:\n      return <Create viewModel={viewModel} close={close} />;\n  }\n});\n","import type { FC, ReactElement } from 'react';\n\nimport type { ModalPropsType } from 'new/ui/managers/ModalManager';\nimport { Modal } from 'new/ui/modals/Modal';\n\ntype Props = {\n  items: ReactElement[];\n  title?: string;\n};\n\nexport const SelectListMobileModal: FC<ModalPropsType & Props> = ({ items, close, title }) => {\n  return (\n    <Modal noDelimiter={false} close={close} title={title}>\n      {items}\n    </Modal>\n  );\n};\n","import type { ParsedTransaction } from 'new/sdk/TransactionParser';\nimport { StatusType } from 'new/sdk/TransactionParser';\n\nexport function parsedTransactionStatusLabel(transaction: ParsedTransaction): string {\n  switch (transaction.status.type) {\n    case StatusType.requesting:\n      return 'Sending';\n    case StatusType.processing:\n      return 'Pending';\n    case StatusType.confirmed:\n      return 'Completed';\n    case StatusType.error:\n      return 'Error';\n  }\n}\n\nexport type StatusIndicatorColor = 'pending' | 'completed' | 'error';\n\nexport function parsedTransactionStatusIndicatorColor(\n  transaction: ParsedTransaction,\n): StatusIndicatorColor {\n  switch (transaction.status.type) {\n    case StatusType.requesting:\n    case StatusType.processing:\n      return 'pending';\n    case StatusType.confirmed:\n      return 'completed';\n    case StatusType.error:\n      return 'error';\n  }\n}\n","import { ZERO } from '@orca-so/sdk';\nimport dayjs from 'dayjs';\nimport { action, makeObservable, observable, reaction } from 'mobx';\nimport { injectable } from 'tsyringe';\n\nimport { ViewModel } from 'new/core/viewmodels/ViewModel';\nimport type { ImageViewType } from 'new/scenes/Main/WalletDetail/History/TransactionCollectionView/TransactionImageView';\nimport { convertToBalance, Wallet } from 'new/sdk/SolanaSDK';\nimport type { ParsedTransaction } from 'new/sdk/TransactionParser';\nimport { StatusType, SwapInfo, TransferInfo, TransferType } from 'new/sdk/TransactionParser';\nimport { Defaults } from 'new/services/Defaults';\nimport { NameService } from 'new/services/NameService';\nimport { NotificationService } from 'new/services/NotificationService';\nimport type { PricesServiceType } from 'new/services/PriceAPIs/PricesService';\nimport { PricesService } from 'new/services/PriceAPIs/PricesService';\nimport type { Model } from 'new/ui/modals/TransactionModal/TransactionModal';\nimport { copyToClipboardString } from 'new/utils/Clipboard';\nimport { numberToString } from 'new/utils/NumberExtensions';\nimport {\n  parsedTransactionStatusIndicatorColor,\n  parsedTransactionStatusLabel,\n} from 'new/utils/SolanaSDK.ParsedTransaction.StatusExtensions';\nimport { parsedTransactionIcon } from 'new/utils/SolanaSDK.ParsedTransactionExtensions';\nimport { truncatingMiddle, withNameServiceDomain } from 'new/utils/StringExtensions';\n\n@injectable()\nexport class TransactionModalViewModel extends ViewModel {\n  private _transaction: ParsedTransaction | null = null;\n  model: Model | null = null;\n\n  constructor(\n    private _pricesService: PricesService,\n    private _nameService: NameService,\n    private _notificationService: NotificationService,\n  ) {\n    super();\n\n    makeObservable<this, '_transaction'>(this, {\n      _transaction: observable,\n      model: observable,\n\n      setTransaction: action,\n    });\n  }\n\n  protected override setDefaults(): void {}\n\n  protected override onInitialize(): void {\n    this.addReaction(\n      reaction(\n        () => this._transaction,\n        async (transaction) => {\n          if (!transaction) {\n            this.model = null;\n            return;\n          }\n\n          const username = await getUsername({\n            transaction,\n            nameService: this._nameService,\n          });\n\n          this.model = mapTransaction({\n            transaction,\n            pricesService: this._pricesService,\n            username,\n          });\n        },\n      ),\n    );\n  }\n\n  protected override afterReactionsRemoved(): void {}\n\n  setTransaction(transaction: ParsedTransaction): void {\n    this._transaction = transaction;\n  }\n\n  copyTransactionId(): void {\n    if (!this._transaction?.signature) {\n      return;\n    }\n    this._copy(this._transaction.signature);\n  }\n\n  copyUsername(): void {\n    if (!this.model?.username) {\n      return;\n    }\n    this._copy(this.model.username);\n  }\n\n  copyAddress(keyPath: 'address' | 'addresses.from' | 'addresses.to'): void {\n    if (!this._transaction) {\n      return;\n    }\n\n    switch (keyPath) {\n      case 'address': {\n        const address = getAddress(this._transaction);\n        return address ? this._copy(address) : undefined;\n      }\n      case 'addresses.from': {\n        const address = getRawAddresses(this._transaction).from;\n        return address ? this._copy(address) : undefined;\n      }\n      case 'addresses.to': {\n        const address = getRawAddresses(this._transaction).to;\n        return address ? this._copy(address) : undefined;\n      }\n      default:\n        return;\n    }\n  }\n\n  private _copy(value: string): void {\n    void copyToClipboardString(\n      value,\n      () => this._notificationService.info(`Copied!`),\n      (error: Error) => console.error(error),\n    );\n  }\n}\n\n// Mappers\n\nfunction mapTransaction({\n  transaction,\n  pricesService,\n  username,\n}: {\n  transaction: ParsedTransaction;\n  pricesService: PricesServiceType;\n  username: string | null;\n}): Model {\n  const amounts = mapAmounts({ transaction, pricesService });\n  const _address = getAddress(transaction);\n  return {\n    imageType: imageType(transaction),\n    amount: amounts.tokens,\n    usdAmount: amounts.usd,\n    blockTime: transaction.blockTime ? dayjs(transaction.blockTime).format('LLL') : '',\n    transactionId: transaction.signature\n      ? truncatingMiddle(transaction.signature, {\n          numOfSymbolsRevealed: 9,\n          numOfSymbolsRevealedInSuffix: 9,\n        })\n      : '',\n    address: _address\n      ? truncatingMiddle(_address, {\n          numOfSymbolsRevealed: 9,\n          numOfSymbolsRevealedInSuffix: 9,\n        })\n      : null,\n    addresses: getAddresses(transaction),\n    username,\n    fee: mapFee(transaction),\n    status: {\n      text: parsedTransactionStatusLabel(transaction),\n      color: parsedTransactionStatusIndicatorColor(transaction),\n    },\n  };\n}\n\nfunction imageType(transaction: ParsedTransaction): {\n  imageType: ImageViewType;\n  statusImage: string | null;\n} {\n  let statusImage: string | null = null;\n  switch (transaction.status.type) {\n    case StatusType.requesting:\n    case StatusType.processing:\n      statusImage = 'clock'; // @ios: transactionIndicatorPending\n      break;\n    case StatusType.error:\n      statusImage = 'warning'; // @ios: transactionIndicatorError\n      break;\n    default:\n      break;\n  }\n\n  switch (transaction.info?.constructor) {\n    case SwapInfo:\n      return {\n        imageType: {\n          fromOneToOne: {\n            from: (transaction.info as SwapInfo).source?.token,\n            to: (transaction.info as SwapInfo).destination?.token,\n          },\n        },\n        statusImage,\n      };\n    default:\n      return {\n        imageType: { oneImage: parsedTransactionIcon(transaction) },\n        statusImage,\n      };\n  }\n}\n\nfunction mapAmounts({\n  transaction,\n  pricesService,\n}: {\n  transaction: ParsedTransaction;\n  pricesService: PricesServiceType;\n}): { tokens: string | null; usd: string | null } {\n  switch (transaction.info?.constructor) {\n    case TransferInfo: {\n      const _transaction = transaction.info as TransferInfo;\n      const fromAmount = `${numberToString(_transaction.rawAmount ?? 0, {\n        maximumFractionDigits: 9,\n      })} ${_transaction.source?.token.symbol}`;\n      const usd = `~ ${Defaults.fiat.symbol}${numberToString(\n        getAmountInCurrentFiat({\n          pricesService,\n          amountInToken: _transaction.rawAmount,\n          symbol: _transaction.source?.token.symbol,\n        }) ?? 0,\n        { maximumFractionDigits: 2 },\n      )}`;\n      return { tokens: fromAmount, usd };\n    }\n    case SwapInfo: {\n      const _transaction = transaction.info as SwapInfo;\n      const fromAmount = `${numberToString(_transaction.sourceAmount ?? 0, {\n        maximumFractionDigits: 9,\n      })} ${_transaction.source?.token.symbol}`;\n      const toAmount = `${numberToString(_transaction.destinationAmount ?? 0, {\n        maximumFractionDigits: 9,\n      })} ${_transaction.destination?.token.symbol}`;\n      const usd = Math.max(\n        getAmountInCurrentFiat({\n          pricesService,\n          amountInToken: _transaction.sourceAmount,\n          symbol: _transaction.source?.token.symbol,\n        }) ?? 0,\n        getAmountInCurrentFiat({\n          pricesService,\n          amountInToken: _transaction.destinationAmount,\n          symbol: _transaction.destination?.token.symbol,\n        }) ?? 0,\n      );\n      return {\n        tokens: `${fromAmount} - ${toAmount}`,\n        usd: `~ ${Defaults.fiat.symbol}${numberToString(usd, { maximumFractionDigits: 2 })}`,\n      };\n    }\n    default:\n      return { tokens: null, usd: null };\n  }\n}\n\nfunction getAmountInCurrentFiat({\n  pricesService,\n  amountInToken,\n  symbol,\n}: {\n  pricesService: PricesServiceType;\n  amountInToken?: number | null;\n  symbol?: string;\n}): number | null {\n  if (!amountInToken || !symbol) {\n    return null;\n  }\n  const price = pricesService.currentPrice(symbol)?.value;\n  if (!price) {\n    return null;\n  }\n  return amountInToken * price;\n}\n\nfunction getAddresses(transaction: ParsedTransaction): { from: string | null; to: string | null } {\n  const { from, to } = getRawAddresses(transaction);\n  switch (transaction.info?.constructor) {\n    case TransferInfo:\n      switch ((transaction.info as TransferInfo).transferType) {\n        default:\n          return { from: null, to: null };\n      }\n    default:\n      return {\n        from: from\n          ? truncatingMiddle(from, { numOfSymbolsRevealed: 9, numOfSymbolsRevealedInSuffix: 9 })\n          : null,\n        to: to\n          ? truncatingMiddle(to, { numOfSymbolsRevealed: 9, numOfSymbolsRevealedInSuffix: 9 })\n          : null,\n      };\n  }\n}\n\nfunction getAddress(transaction: ParsedTransaction): string | null {\n  const { from, to } = getRawAddresses(transaction);\n  switch (transaction.info?.constructor) {\n    case TransferInfo:\n      switch ((transaction.info as TransferInfo).transferType) {\n        case TransferType.send:\n          return to;\n        case TransferType.receive:\n          return from;\n        default:\n          return to;\n      }\n    default:\n      break;\n  }\n  return null;\n}\n\nfunction getRawAddresses(transaction: ParsedTransaction): {\n  from: string | null;\n  to: string | null;\n} {\n  let from: string | null;\n  switch (transaction.info?.constructor) {\n    case SwapInfo:\n      from = (transaction.info as SwapInfo).source?.pubkey ?? null;\n      break;\n    case TransferInfo:\n      from = (transaction.info as TransferInfo).source?.pubkey ?? null;\n      break;\n    default:\n      from = null;\n      break;\n  }\n\n  let to: string | null;\n  switch (transaction.info?.constructor) {\n    case SwapInfo:\n      to = (transaction.info as SwapInfo).destination?.pubkey ?? null;\n      break;\n    case TransferInfo:\n      to = (transaction.info as TransferInfo).destination?.pubkey ?? null;\n      break;\n    default:\n      to = null;\n      break;\n  }\n\n  return { from, to };\n}\n\nasync function getUsername({\n  transaction,\n  nameService,\n}: {\n  transaction: ParsedTransaction;\n  nameService: NameService;\n}): Promise<string | null> {\n  let address: string | null;\n  switch (transaction.info?.constructor) {\n    case TransferInfo:\n      switch ((transaction.info as TransferInfo).transferType) {\n        case TransferType.send:\n          address =\n            (transaction.info as TransferInfo).destinationAuthority ??\n            (transaction.info as TransferInfo).destination?.pubkey ??\n            null;\n          break;\n        case TransferType.receive:\n          address =\n            (transaction.info as TransferInfo).authority ??\n            (transaction.info as TransferInfo).source?.pubkey ??\n            null;\n          break;\n        default:\n          address =\n            (transaction.info as TransferInfo).destinationAuthority ??\n            (transaction.info as TransferInfo).destination?.pubkey ??\n            null;\n          break;\n      }\n      break;\n    default:\n      address = null;\n      break;\n  }\n\n  if (!address) {\n    return null;\n  }\n  try {\n    const _name = await nameService.getName(address);\n    return _name ? withNameServiceDomain(_name) : null;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nexport type Fee = {\n  text: string;\n  color: string;\n};\n\nfunction mapFee(transaction: ParsedTransaction): Fee {\n  const payingWallet = Wallet.nativeSolana({ pubkey: null, lamports: ZERO });\n  const feeAmount = transaction.fee;\n\n  const amount = feeAmount?.accountBalances\n    ? convertToBalance(feeAmount.accountBalances, payingWallet.token.decimals)\n    : 0;\n  const transferAmount = feeAmount?.transaction\n    ? convertToBalance(feeAmount.transaction, payingWallet.token.decimals)\n    : 0;\n  const swapFee = convertToBalance(\n    (feeAmount?.transaction ?? ZERO).add(feeAmount?.accountBalances ?? ZERO),\n    payingWallet.token.decimals,\n  );\n\n  if (feeAmount?.transaction.eqn(0)) {\n    return { text: 'Free by Key App', color: 'blue' };\n  } else {\n    return {\n      text: `${numberToString(Math.max(amount, transferAmount, swapFee), {\n        maximumFractionDigits: 9,\n      })} ${payingWallet.token.symbol}`,\n      color: '',\n    };\n  }\n}\n","import type { FC } from 'react';\n\nimport { styled } from '@linaria/react';\n\nimport { Icon } from 'components/ui';\n\nconst CopyIcon = styled(Icon)`\n  width: 21px;\n  height: 21px;\n\n  color: #a3a5ba;\n`;\n\nconst Wrapper = styled.span`\n  width: 32px;\n  height: 32px;\n\n  cursor: pointer;\n\n  &:hover {\n    ${CopyIcon} {\n      color: #5887ff;\n    }\n  }\n`;\n\ninterface Props {\n  className?: string;\n}\n\nexport const CopyImage: FC<Props> = ({ className }) => {\n  return (\n    <Wrapper className={className}>\n      <CopyIcon name=\"copy\" />\n    </Wrapper>\n  );\n};\n","import type { FC } from 'react';\n\nimport { styled } from '@linaria/react';\nimport type { Network } from '@saberhq/solana-contrib';\n\nimport { Icon } from 'components/ui';\nimport { getExplorerUrl } from 'utils/connection';\n\nconst Link = styled.a`\n  display: inline-flex;\n  align-items: center;\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 140%;\n\n  text-decoration: none;\n\n  &.isDisabled {\n    pointer-events: none;\n  }\n`;\n\nconst ExplorerIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n`;\n\ninterface Props {\n  signature: string | null;\n  network: Network;\n}\n\nexport const SolanaExplorerLink: FC<Props> = ({ signature, network }) => {\n  return (\n    <Link\n      href={signature ? getExplorerUrl('tx', signature, network) : ''}\n      target=\"_blank\"\n      rel=\"noopener noreferrer noindex\"\n    >\n      <ExplorerIcon name=\"external\" />\n      View in Solana explorer\n    </Link>\n  );\n};\n","import type { FC } from 'react';\nimport { useLayoutEffect } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { theme } from '@p2p-wallet-web/ui';\nimport { observer } from 'mobx-react-lite';\n\nimport { useViewModel } from 'new/core/viewmodels';\nimport type { ImageViewType } from 'new/scenes/Main/WalletDetail/History/TransactionCollectionView/TransactionImageView';\nimport { TransactionImageView } from 'new/scenes/Main/WalletDetail/History/TransactionCollectionView/TransactionImageView';\nimport type { ParsedTransaction } from 'new/sdk/TransactionParser';\nimport { Defaults } from 'new/services/Defaults';\nimport type { Fee } from 'new/ui/modals/TransactionModal/TransactionModal.ViewModal';\nimport { TransactionModalViewModel } from 'new/ui/modals/TransactionModal/TransactionModal.ViewModal';\n\nimport type { ModalPropsType } from '../../managers/ModalManager';\nimport { Modal } from '../Modal';\nimport { CopyImage } from './CopyImage';\nimport { SolanaExplorerLink } from './SolanaExplorerLink';\n\nconst WrapperModal = styled(Modal)`\n  flex-basis: 524px;\n`;\n\nconst ModalTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px;\n\n  line-height: 140%;\n  letter-spacing: 0.01em;\n`;\n\nconst TransactionImageViewStyled = styled(TransactionImageView)`\n  margin-bottom: 12px;\n`;\n\nconst AmountLabel = styled.div`\n  color: ${theme.colors.textIcon.primary};\n  font-weight: 700;\n  font-size: 16px;\n`;\n\nconst USDAmountLabel = styled.div`\n  color: ${theme.colors.textIcon.secondary};\n  font-weight: 500;\n  font-size: 20px;\n`;\n\nconst BlockTimeLabel = styled.div`\n  color: ${theme.colors.textIcon.secondary};\n  font-size: 14px;\n`;\n\nconst Content = styled.div`\n  display: grid;\n  grid-gap: 23px;\n  padding: 16px 30px;\n`;\n\nconst FieldWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst FieldTitle = styled.div`\n  color: ${theme.colors.textIcon.primary};\n  font-weight: 500;\n  font-size: 16px;\n`;\n\nconst FieldValue = styled.div`\n  color: ${theme.colors.textIcon.secondary};\n  font-size: 16px;\n`;\n\nconst FeeLabel = styled.div`\n  &.blue {\n    color: ${theme.colors.textIcon.active};\n  }\n`;\n\nconst StatusLabel = styled.div`\n  &.pending {\n    color: #ffa631;\n  }\n\n  &.completed {\n    color: #77db7c;\n  }\n\n  &.error {\n    color: #f43d3d;\n  }\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport type Model = {\n  imageType: { imageType: ImageViewType; statusImage: string | null };\n  amount: string | null;\n  usdAmount: string | null;\n  blockTime: string;\n  transactionId: string;\n  address: string | null;\n  addresses: { from: string | null; to: string | null };\n  username: string | null;\n  fee: Fee;\n  status: Status;\n};\n\ntype Status = {\n  text: string;\n  color: string;\n};\n\nexport interface TransactionModalProps {\n  transaction: ParsedTransaction;\n}\n\n// TODO: skeleton instead return null\n// TODO: username view\nexport const TransactionModal: FC<TransactionModalProps & ModalPropsType> = observer(\n  ({ close, transaction }) => {\n    const viewModel = useViewModel(TransactionModalViewModel);\n\n    useLayoutEffect(() => {\n      viewModel.setTransaction(transaction);\n    }, [transaction]);\n\n    const handleCloseClick = () => {\n      close(false);\n    };\n\n    const model = viewModel.model;\n\n    if (!model) {\n      return null;\n    }\n\n    return (\n      <WrapperModal\n        title={\n          <ModalTitle>\n            <TransactionImageViewStyled\n              imageView={model.imageType.imageType}\n              statusImage={model.imageType.statusImage}\n            />\n            {model.amount ? <AmountLabel>{model.amount}</AmountLabel> : null}\n            {model.usdAmount ? <USDAmountLabel>{model.usdAmount}</USDAmountLabel> : null}\n            <BlockTimeLabel>{model.blockTime}</BlockTimeLabel>\n          </ModalTitle>\n        }\n        close={handleCloseClick}\n        footer={\n          <Footer>\n            <SolanaExplorerLink\n              signature={model.transactionId}\n              network={Defaults.apiEndpoint.network}\n            />\n          </Footer>\n        }\n        noDelimiter={false}\n      >\n        <Content>\n          {model.username ? (\n            <FieldWrapper>\n              <FieldTitle>Username</FieldTitle>\n              <FieldValue onClick={() => viewModel.copyUsername()}>\n                {model.username} <CopyImage />\n              </FieldValue>\n            </FieldWrapper>\n          ) : null}\n          {model.address ? (\n            <FieldWrapper>\n              <FieldTitle>Address</FieldTitle>\n              <FieldValue onClick={() => viewModel.copyAddress('address')}>\n                {model.address} <CopyImage />\n              </FieldValue>\n            </FieldWrapper>\n          ) : null}\n          {model.addresses.from ? (\n            <FieldWrapper>\n              <FieldTitle>From</FieldTitle>\n              <FieldValue onClick={() => viewModel.copyAddress('addresses.from')}>\n                {model.addresses.from} <CopyImage />\n              </FieldValue>\n            </FieldWrapper>\n          ) : null}\n          {model.addresses.to ? (\n            <FieldWrapper>\n              <FieldTitle>To</FieldTitle>\n              <FieldValue onClick={() => viewModel.copyAddress('addresses.to')}>\n                {model.addresses.to} <CopyImage />\n              </FieldValue>\n            </FieldWrapper>\n          ) : null}\n          <FieldWrapper>\n            <FieldTitle>Fee</FieldTitle>\n            <FieldValue>\n              <FeeLabel className={model.fee.color}>{model.fee.text}</FeeLabel>\n            </FieldValue>\n          </FieldWrapper>\n          <FieldWrapper>\n            <FieldTitle>Status</FieldTitle>\n            <FieldValue>\n              <StatusLabel className={model.status.color}>{model.status.text}</StatusLabel>\n            </FieldValue>\n          </FieldWrapper>\n          <FieldWrapper>\n            <FieldTitle>Transaction ID</FieldTitle>\n            <FieldValue onClick={() => viewModel.copyTransactionId()}>\n              {model.transactionId} <CopyImage />\n            </FieldValue>\n          </FieldWrapper>\n        </Content>\n      </WrapperModal>\n    );\n  },\n);\n","import type { FC } from 'react';\n\nimport { observer } from 'mobx-react-lite';\n\nimport type { SendViewModel } from 'new/scenes/Main/Send';\nimport { Defaults } from 'new/services/Defaults';\nimport { TokenAvatar } from 'new/ui/components/common/TokenAvatar';\nimport { numberToString } from 'new/utils/NumberExtensions';\n\nimport { FieldInfo, InfoTitle, InfoValue, InfoWrapper } from '../../common/styled';\n\ninterface Props {\n  viewModel: Readonly<SendViewModel>;\n}\n\nexport const AmountSummaryView: FC<Props> = observer(({ viewModel }) => {\n  const wallet = viewModel.wallet;\n  const amount = viewModel.amount ?? 0;\n  const amountInFiat = amount * (wallet?.priceInCurrentFiat ?? 0);\n\n  return (\n    <FieldInfo>\n      <TokenAvatar token={wallet?.token} size={44} />\n      <InfoWrapper>\n        <InfoTitle>\n          {numberToString(amount, { maximumFractionDigits: 9 })} {wallet?.token.symbol ?? ''}\n        </InfoTitle>\n        <InfoValue>\n          {Defaults.fiat.symbol}\n          {numberToString(amountInFiat, { maximumFractionDigits: 2 })}\n        </InfoValue>\n      </InfoWrapper>\n    </FieldInfo>\n  );\n});\n","import type { FC } from 'react';\n\nimport { observer } from 'mobx-react-lite';\n\nimport type { SendViewModel } from 'new/scenes/Main/Send';\nimport { AddressText } from 'new/ui/components/common/AddressText';\n\nimport {\n  FieldInfo,\n  IconWrapper,\n  InfoTitle,\n  InfoValue,\n  InfoWrapper,\n  To,\n  Username,\n  WalletIcon,\n} from '../../common/styled';\n\ninterface Props {\n  viewModel: Readonly<SendViewModel>;\n}\n\nexport const RecipientView: FC<Props> = observer(({ viewModel }) => {\n  const recipient = viewModel.recipient!;\n\n  return (\n    <FieldInfo>\n      <IconWrapper>\n        <WalletIcon name=\"wallet\" />\n      </IconWrapper>\n      <InfoWrapper>\n        {recipient.name ? (\n          <Username>\n            <To>To</To>\n            {recipient.name}\n          </Username>\n        ) : (\n          <InfoTitle className=\"secondary\">To address</InfoTitle>\n        )}\n        <InfoValue>\n          <AddressText address={recipient.address} medium />\n        </InfoValue>\n      </InfoWrapper>\n    </FieldInfo>\n  );\n});\n","import type { FC } from 'react';\nimport { useState } from 'react';\n\nimport { styled } from '@linaria/react';\nimport {\n  DEFAULT_WALLET_PROVIDERS,\n  DefaultWalletType,\n  useTryUnlockSeedAndMnemonic,\n  useWallet,\n} from '@p2p-wallet-web/core';\nimport { theme } from '@p2p-wallet-web/ui';\nimport { observer } from 'mobx-react-lite';\n\nimport { Button, Icon } from 'components/ui';\nimport { Modal } from 'components/ui/Modal';\nimport type { SendViewModel } from 'new/scenes/Main/Send';\nimport { ButtonCancel } from 'new/ui/components/common/ButtonCancel';\nimport { ErrorHint } from 'new/ui/components/common/ErrorHint';\nimport { PasswordInput } from 'new/ui/components/common/PasswordInput';\nimport { numberToString } from 'new/utils/NumberExtensions';\n\nimport type { ModalPropsType } from '../../../managers/ModalManager';\nimport { ArrowDown } from '../common/ArrowDown';\nimport { Section } from '../common/styled';\nimport { AmountSummaryView } from './AmountSummaryView';\nimport { RecipientView } from './RecipientView';\n\nconst WrapperModal = styled(Modal)`\n  flex-basis: 524px;\n`;\n\nconst ModalTitle = styled.div`\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 140%;\n  text-align: center;\n`;\n\nconst SubTitle = styled.span`\n  display: flex;\n  margin-bottom: 8px;\n\n  color: ${theme.colors.textIcon.primary};\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 140%;\n  letter-spacing: 0.01em;\n`;\n\nconst ActionTitle = styled.div`\n  padding: 16px 0 0 16px;\n\n  color: ${theme.colors.textIcon.primary};\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 140%;\n  letter-spacing: 0.01em;\n`;\n\nconst PasswordInputStyled = styled(PasswordInput)`\n  height: 46px;\n`;\n\nconst SendIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n  margin-right: 12px;\n`;\n\nexport interface ConfirmSendModalProps {\n  viewModel: Readonly<SendViewModel>;\n}\n\nexport const ConfirmSendModal: FC<ConfirmSendModalProps & ModalPropsType> = observer(\n  ({ close, viewModel }) => {\n    const { walletProviderInfo } = useWallet();\n    const tryUnlockSeedAndMnemonic = useTryUnlockSeedAndMnemonic();\n\n    const [password, setPassword] = useState('');\n    const [hasError, setHasError] = useState(false);\n\n    const handleCloseClick = () => {\n      close(false);\n    };\n\n    const validatePassword = async (value: string) => {\n      try {\n        await tryUnlockSeedAndMnemonic(value);\n        setHasError(false);\n      } catch (error) {\n        setHasError(true);\n      }\n    };\n\n    const handlePasswordChange = (value: string) => {\n      setPassword(value);\n\n      if (value) {\n        void validatePassword(value);\n      }\n    };\n\n    const handleConfirmClick = () => {\n      close(true);\n      viewModel.authenticateAndSend();\n    };\n\n    const isSecretKeyWallet =\n      walletProviderInfo?.name === DEFAULT_WALLET_PROVIDERS[DefaultWalletType.SecretKey].name;\n    const isDisabled =\n      (isSecretKeyWallet && (!password || hasError)) ||\n      !viewModel.wallet ||\n      !viewModel.amount ||\n      !viewModel.recipient;\n\n    // const address = params.destination?.toBase58?.() || btcAddress;\n    // const isFullName = /\\w*\\.\\w+/.test(params.username || '');\n\n    return (\n      <WrapperModal\n        title={<ModalTitle>Confirm sending {viewModel.wallet?.token.symbol ?? ''}</ModalTitle>}\n        close={handleCloseClick}\n        footer={\n          <>\n            <Button primary disabled={isDisabled} onClick={handleConfirmClick}>\n              <SendIcon name=\"top\" />\n              {viewModel.error?.buttonSuggestion ??\n                `Send ${numberToString(viewModel.amount, {\n                  maximumFractionDigits: 9,\n                })} ${viewModel.wallet?.token.symbol ?? ''}`}\n            </Button>\n            <ButtonCancel onClick={handleCloseClick} />\n          </>\n        }\n        noDelimiter={false}\n      >\n        <ActionTitle>You are going to send</ActionTitle>\n\n        <Section className=\"send\">\n          <div>\n            <AmountSummaryView viewModel={viewModel} />\n            <ArrowDown />\n            <RecipientView viewModel={viewModel} />\n          </div>\n\n          {/*<TransactionDetails sendState={sendState} amount={params.amount} />*/}\n        </Section>\n\n        {isSecretKeyWallet ? (\n          <Section className=\"password\">\n            <SubTitle>Enter password to confirm</SubTitle>\n            <PasswordInputStyled\n              value={password}\n              onChange={handlePasswordChange}\n              isError={hasError}\n            />\n            {hasError ? <ErrorHint error=\"The password is not correct\" noIcon /> : null}\n          </Section>\n        ) : null}\n      </WrapperModal>\n    );\n  },\n);\n","import type { FC } from 'react';\nimport { useLayoutEffect, useState } from 'react';\n\nimport { styled } from '@linaria/react';\nimport {\n  DEFAULT_WALLET_PROVIDERS,\n  DefaultWalletType,\n  useTryUnlockSeedAndMnemonic,\n  useWallet,\n} from '@p2p-wallet-web/core';\nimport { theme } from '@p2p-wallet-web/ui';\n\nimport { ErrorHint } from 'new/ui/components/common/ErrorHint';\nimport { PasswordInput } from 'new/ui/components/common/PasswordInput';\nimport { Section } from 'new/ui/modals/confirmModals/common/styled';\n\nconst SubTitle = styled.span`\n  display: flex;\n  margin-bottom: 8px;\n\n  color: ${theme.colors.textIcon.primary};\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 140%;\n  letter-spacing: 0.01em;\n`;\n\nconst PasswordInputStyled = styled(PasswordInput)`\n  height: 46px;\n`;\n\ninterface Props {\n  onChange: (flag: boolean) => void;\n}\n\n// TODO: remake it during auth reimplementation\nexport const SectionPassword: FC<Props> = ({ onChange }) => {\n  const { walletProviderInfo } = useWallet();\n  const tryUnlockSeedAndMnemonic = useTryUnlockSeedAndMnemonic();\n\n  const [password, setPassword] = useState('');\n  const [hasError, setHasError] = useState(false);\n\n  const isSecretKeyWallet =\n    walletProviderInfo?.name === DEFAULT_WALLET_PROVIDERS[DefaultWalletType.SecretKey].name;\n\n  useLayoutEffect(() => {\n    onChange(isSecretKeyWallet && (!password || hasError));\n  }, [hasError, isSecretKeyWallet, onChange, password]);\n\n  const validatePassword = async (value: string) => {\n    try {\n      await tryUnlockSeedAndMnemonic(value);\n      setHasError(false);\n    } catch (error) {\n      setHasError(true);\n    }\n  };\n\n  const handlePasswordChange = (value: string) => {\n    setPassword(value);\n\n    if (value) {\n      void validatePassword(value);\n    }\n  };\n\n  if (!isSecretKeyWallet) {\n    return null;\n  }\n\n  return (\n    <Section className=\"password\">\n      <SubTitle>Enter password to confirm</SubTitle>\n      <PasswordInputStyled value={password} onChange={handlePasswordChange} isError={hasError} />\n      {hasError ? <ErrorHint error=\"The password is not correct\" noIcon /> : null}\n    </Section>\n  );\n};\n","import type { FC } from 'react';\nimport * as React from 'react';\n\nimport { styled } from '@linaria/react';\nimport { observer } from 'mobx-react-lite';\n\nimport { Icon } from 'components/ui';\nimport { Button } from 'new/ui/components/ui/Button';\n\nimport type { ConfirmSwapModalViewModel } from '../ConfirmSwapModal.ViewModel';\n\nconst SwapIcon = styled(Icon)`\n  width: 24px;\n  height: 24px;\n  margin-right: 12px;\n`;\n\ninterface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  viewModel: Readonly<ConfirmSwapModalViewModel>;\n}\n\nexport const ActionButton: FC<Props> = observer(({ viewModel, ...props }) => {\n  return (\n    <Button primary {...props}>\n      <SwapIcon name=\"top\" /> Swap {viewModel.sourceWallet?.token.symbol ?? ''} →{' '}\n      {viewModel.destinationWallet?.token.symbol ?? ''}\n    </Button>\n  );\n});\n","import { action, computed, makeObservable } from 'mobx';\nimport assert from 'ts-invariant';\nimport { injectable } from 'tsyringe';\n\nimport type { LoadableRelay } from 'new/app/models/LoadableRelay';\nimport type { PayingFee } from 'new/app/models/PayingFee';\nimport { ViewModel } from 'new/core/viewmodels/ViewModel';\nimport type { SwapViewModel } from 'new/scenes/Main/Swap';\nimport type { Wallet } from 'new/sdk/SolanaSDK';\nimport { Defaults } from 'new/services/Defaults';\nimport { PricesService } from 'new/services/PriceAPIs/PricesService';\nimport { numberToString } from 'new/utils/NumberExtensions';\n\n// @web: i use injectable to don't reset swapViewModel during hmr, it cause\n// page crash then swapViewModel is not available\n@injectable()\nexport class ConfirmSwapModalViewModel extends ViewModel {\n  private _swapViewModel: Readonly<SwapViewModel> | null;\n\n  constructor(private _pricesService: PricesService) {\n    super();\n\n    this._swapViewModel = null;\n\n    makeObservable(this, {\n      sourceWallet: computed,\n      destinationWallet: computed,\n      inputAmount: computed,\n      estimatedAmount: computed,\n      minimumReceiveAmount: computed,\n      exchangeRate: computed,\n      fees: computed,\n      slippage: computed,\n\n      getPrice: action,\n      authenticateAndSwap: action,\n\n      inputAmountString: computed,\n      inputAmountInFiatString: computed,\n      estimatedAmountString: computed,\n      receiveAtLeastString: computed,\n      receiveAtLeastInFiatString: computed,\n\n      totalFees: computed,\n      setSwapViewModel: action,\n    });\n  }\n\n  protected override setDefaults() {\n    // this._swapViewModel = null;\n  }\n\n  protected override onInitialize() {}\n\n  protected override afterReactionsRemoved() {}\n\n  get sourceWallet(): Wallet | null {\n    assert(this._swapViewModel, 'SwapViewModel is not set');\n    return this._swapViewModel.sourceWallet;\n  }\n\n  get destinationWallet(): Wallet | null {\n    assert(this._swapViewModel, 'SwapViewModel is not set');\n    return this._swapViewModel.destinationWallet;\n  }\n\n  get inputAmount(): number | null {\n    assert(this._swapViewModel, 'SwapViewModel is not set');\n    return this._swapViewModel.inputAmount;\n  }\n\n  get estimatedAmount(): number | null {\n    assert(this._swapViewModel, 'SwapViewModel is not set');\n    return this._swapViewModel.estimatedAmount;\n  }\n\n  get minimumReceiveAmount(): number | null {\n    assert(this._swapViewModel, 'SwapViewModel is not set');\n    return this._swapViewModel.minimumReceiveAmount;\n  }\n\n  get exchangeRate(): number | null {\n    assert(this._swapViewModel, 'SwapViewModel is not set');\n    return this._swapViewModel.exchangeRate;\n  }\n\n  get fees(): LoadableRelay<PayingFee[]> {\n    assert(this._swapViewModel, 'SwapViewModel is not set');\n    return this._swapViewModel.fees;\n  }\n\n  get slippage(): number {\n    assert(this._swapViewModel, 'SwapViewModel is not set');\n    return this._swapViewModel.slippage;\n  }\n\n  getPrice(symbol: string): number | null {\n    return this._pricesService.currentPrice(symbol)?.value ?? null;\n  }\n\n  authenticateAndSwap(): void {\n    assert(this._swapViewModel, 'SwapViewModel is not set');\n    this._swapViewModel.authenticateAndSwap();\n  }\n\n  // Extend\n\n  get inputAmountString(): string {\n    const wallet = this.sourceWallet;\n    const amount = this.inputAmount;\n    return `${numberToString(amount ?? 0, {\n      maximumFractionDigits: 9,\n    })} ${wallet?.token.symbol}`;\n  }\n\n  get inputAmountInFiatString(): string {\n    const wallet = this.sourceWallet;\n    const amount = this.inputAmount;\n    return `${Defaults.fiat.symbol}${numberToString(\n      (amount ?? 0) * (wallet?.priceInCurrentFiat ?? 0),\n      {\n        maximumFractionDigits: 2,\n      },\n    )}`;\n  }\n\n  get estimatedAmountString(): string {\n    const wallet = this.destinationWallet;\n    const amount = this.estimatedAmount;\n    return `${numberToString(amount ?? 0, { maximumFractionDigits: 9 })} ${wallet?.token.symbol}`;\n  }\n\n  get receiveAtLeastString(): string {\n    const wallet = this.destinationWallet;\n    const amount = this.minimumReceiveAmount;\n    return `${numberToString(amount ?? 0, { maximumFractionDigits: 9 })} ${\n      wallet?.token.symbol ?? ''\n    }`;\n  }\n\n  get receiveAtLeastInFiatString(): string {\n    const wallet = this.destinationWallet;\n    const amount = this.minimumReceiveAmount;\n    return `${Defaults.fiat.symbol}${numberToString(\n      (amount ?? 0) * (wallet?.priceInCurrentFiat ?? 0),\n      { maximumFractionDigits: 2 },\n    )}`;\n  }\n\n  // @web: own code\n\n  get totalFees(): {\n    totalFeesSymbol: string;\n    decimals: number;\n    amount: number;\n    amountInFiat: number;\n  } | null {\n    assert(this._swapViewModel, 'SwapViewModel is not set');\n    return this._swapViewModel.totalFees;\n  }\n\n  setSwapViewModel(swapViewModel: Readonly<SwapViewModel>): void {\n    this._swapViewModel = swapViewModel;\n  }\n}\n","import type { FC } from 'react';\n\nimport { observer } from 'mobx-react-lite';\n\nimport { Row, Text } from 'components/ui/AccordionDetails/common';\n\nimport type { ConfirmSwapModalViewModel } from '../../ConfirmSwapModal.ViewModel';\n\ninterface Props {\n  viewModel: Readonly<ConfirmSwapModalViewModel>;\n}\n\nexport const SlippageView: FC<Props> = observer(({ viewModel }) => {\n  return (\n    <Row>\n      <Text className=\"gray\">Max price slippage</Text>\n      <Text>{viewModel.slippage * 100}%</Text>\n    </Row>\n  );\n});\n","import type { FC } from 'react';\n\nimport { observer } from 'mobx-react-lite';\nimport { expr } from 'mobx-utils';\n\nimport { Accordion } from 'components/ui';\nimport { AccordionTitle } from 'components/ui/AccordionDetails/AccordionTitle';\nimport { DetailFeesView } from 'new/scenes/Main/Swap/Swap/Subviews/DetailsView/DetailFeesView';\nimport { RatesStackView } from 'new/scenes/Main/Swap/Swap/Subviews/DetailsView/RatesStackView';\nimport { numberToString } from 'new/utils/NumberExtensions';\n\nimport type { ConfirmSwapModalViewModel } from '../ConfirmSwapModal.ViewModel';\nimport { SlippageView } from './SlippageView';\n\ninterface Props {\n  viewModel: Readonly<ConfirmSwapModalViewModel>;\n}\n\nexport const DetailsView: FC<Props> = observer(({ viewModel }) => {\n  const totalFee = expr(() => {\n    const totalFees = viewModel.totalFees;\n    if (totalFees) {\n      const { amount, decimals, totalFeesSymbol } = totalFees;\n      return `${numberToString(amount, { maximumFractionDigits: decimals })} ${totalFeesSymbol}`;\n    }\n    return '';\n  });\n\n  return (\n    <Accordion\n      title={\n        <AccordionTitle\n          title=\"Swap details\"\n          titleBottomName=\"Total fee\"\n          titleBottomValue={totalFee}\n        />\n      }\n      open={true}\n      noContentPadding\n    >\n      <RatesStackView\n        exchangeRate={viewModel.exchangeRate}\n        sourceWallet={viewModel.sourceWallet}\n        destinationWallet={viewModel.destinationWallet}\n      />\n      <DetailFeesView viewModel={viewModel} slippageView={<SlippageView viewModel={viewModel} />} />\n    </Accordion>\n  );\n});\n","import type { FC } from 'react';\n\nimport { observer } from 'mobx-react-lite';\n\nimport { TokenAvatar } from 'new/ui/components/common/TokenAvatar';\n\nimport { FieldInfo, InfoTitle, InfoValue, InfoWrapper } from '../../common/styled';\nimport type { ConfirmSwapModalViewModel } from '../ConfirmSwapModal.ViewModel';\n\ninterface Props {\n  viewModel: Readonly<ConfirmSwapModalViewModel>;\n  type: 'source' | 'destination';\n}\n\nexport const WalletView: FC<Props> = observer(({ viewModel, type }) => {\n  const wallet = type === 'source' ? viewModel.sourceWallet : viewModel.destinationWallet;\n  const amountLabel =\n    type === 'source' ? viewModel.inputAmountString : viewModel.estimatedAmountString;\n  const equityAmountLabel =\n    type === 'source'\n      ? `~${viewModel.inputAmountInFiatString}`\n      : `Receive at least: ${viewModel.receiveAtLeastString}`;\n\n  return (\n    <FieldInfo>\n      <TokenAvatar token={wallet?.token} size={44} />\n      <InfoWrapper>\n        <InfoTitle>{amountLabel}</InfoTitle>\n        <InfoValue>{equityAmountLabel}</InfoValue>\n      </InfoWrapper>\n    </FieldInfo>\n  );\n});\n","import type { FC } from 'react';\nimport { useState } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { theme } from '@p2p-wallet-web/ui';\nimport { observer } from 'mobx-react-lite';\n\nimport { Modal } from 'components/ui/Modal';\nimport { useViewModel } from 'new/core/viewmodels/useViewModel';\nimport type { SwapViewModel } from 'new/scenes/Main/Swap';\nimport { ButtonCancel } from 'new/ui/components/common/ButtonCancel';\n\nimport type { ModalPropsType } from '../../../managers/ModalManager';\nimport { ArrowDown } from '../common/ArrowDown';\nimport { SectionPassword } from '../common/SectionPassword';\nimport { Section } from '../common/styled';\nimport { ActionButton } from './ActionButton';\nimport { ConfirmSwapModalViewModel } from './ConfirmSwapModal.ViewModel';\nimport { DetailsView } from './DetailsView';\nimport { WalletView } from './WalletView';\n\nconst WrapperModal = styled(Modal)`\n  flex-basis: 524px;\n`;\n\nconst ModalTitle = styled.div`\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 140%;\n  text-align: center;\n`;\n\nconst ActionTitle = styled.div`\n  padding: 16px;\n\n  color: ${theme.colors.textIcon.primary};\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 16px;\n  letter-spacing: 0.01em;\n`;\n\nexport interface ConfirmSwapModalProps {\n  viewModel: Readonly<SwapViewModel>;\n}\n\nexport const ConfirmSwapModal: FC<ConfirmSwapModalProps & ModalPropsType> = observer(\n  ({ close, viewModel }) => {\n    const vm = useViewModel(ConfirmSwapModalViewModel);\n    vm.setSwapViewModel(viewModel);\n\n    const [isDisabled, setIsDisabled] = useState(true);\n\n    const handleCloseClick = () => {\n      close(false);\n    };\n\n    const handleConfirmClick = () => {\n      close(true);\n      vm.authenticateAndSwap();\n    };\n\n    const handleDisabledChange = (flag: boolean) => {\n      setIsDisabled(flag);\n    };\n\n    return (\n      <WrapperModal\n        title={\n          <ModalTitle>\n            Confirm swapping {vm.sourceWallet?.token.symbol ?? ''} →{' '}\n            {vm.destinationWallet?.token.symbol ?? ''}\n          </ModalTitle>\n        }\n        close={handleCloseClick}\n        footer={\n          <>\n            <ActionButton viewModel={vm} disabled={isDisabled} onClick={handleConfirmClick} />\n            <ButtonCancel onClick={handleCloseClick} />\n          </>\n        }\n        noDelimiter={false}\n      >\n        <ActionTitle>You are going to swap</ActionTitle>\n        <Section className=\"swap\">\n          <div>\n            <WalletView viewModel={vm} type=\"source\" />\n            <ArrowDown />\n            <WalletView viewModel={vm} type=\"destination\" />\n          </div>\n          <DetailsView viewModel={vm} />\n        </Section>\n        <SectionPassword onChange={handleDisabledChange} />\n      </WrapperModal>\n    );\n  },\n);\n","import type { FC } from 'react';\n\nimport { styled } from '@linaria/react';\nimport { theme } from '@p2p-wallet-web/ui';\n\nimport { Icon } from 'components/ui';\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  height: 16px;\n  margin-left: 26px;\n`;\n\nconst ArrowIconWrapper = styled.div`\n  position: relative;\n  top: -8px;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n\n  color: ${theme.colors.textIcon.active};\n\n  background: ${theme.colors.bg.primary};\n  border: 1px solid ${theme.colors.stroke.secondary};\n  border-radius: 12px;\n\n  &::before,\n  &::after {\n    position: absolute;\n\n    width: 1px;\n    height: 16px;\n\n    background: ${theme.colors.bg.primary};\n\n    content: '';\n  }\n\n  &::before {\n    left: -1px;\n  }\n\n  &::after {\n    right: -1px;\n  }\n`;\n\nconst ArrowIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n`;\n\nexport const ArrowDown: FC = () => {\n  return (\n    <Wrapper>\n      <ArrowIconWrapper>\n        <ArrowIcon name=\"arrow-down\" />\n      </ArrowIconWrapper>\n    </Wrapper>\n  );\n};\n","import { styled } from '@linaria/react';\nimport { theme } from '@p2p-wallet-web/ui';\n\nimport type { IconProps } from 'components/ui';\nimport { Icon } from 'components/ui';\n\nexport const Section = styled.div`\n  display: grid;\n  padding: 20px 0;\n\n  &.swap {\n    position: relative;\n\n    grid-gap: 36px;\n    padding: 0;\n  }\n\n  &.send {\n    grid-gap: 16px;\n    padding: 16px 0;\n  }\n\n  &.password {\n    padding: 8px 0 24px;\n  }\n`;\n\nexport const FieldInfo = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px 20px;\n\n  border: 1px solid ${theme.colors.stroke.secondary};\n  border-radius: 12px;\n`;\n\nexport const WalletIcon = styled<IconProps>(Icon)`\n  width: 24px;\n  height: 24px;\n\n  color: ${theme.colors.textIcon.secondary};\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 44px;\n  height: 44px;\n\n  background: ${theme.colors.bg.secondary};\n  border-radius: 12px;\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 9px 0 12px;\n`;\n\nexport const InfoTitle = styled.div`\n  color: ${theme.colors.textIcon.primary};\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 140%;\n\n  &.secondary {\n    color: ${theme.colors.textIcon.secondary};\n    font-size: 14px;\n    line-height: 120%;\n  }\n`;\n\nexport const Username = styled(InfoTitle)`\n  color: #000;\n  font-weight: 500;\n  font-size: 14px;\n`;\n\nexport const To = styled.span`\n  margin-right: 4px;\n\n  color: ${theme.colors.textIcon.secondary};\n`;\n\nexport const InfoValue = styled.div`\n  margin-top: 4px;\n\n  color: ${theme.colors.textIcon.secondary};\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 120%;\n  letter-spacing: 0.01em;\n`;\n\nexport const Wrapper = styled.div`\n  margin-bottom: 8px;\n`;\n"],"names":["Wrapper","IconWrapper","StyledIcon","Header","Description","Buttons","ButtonStyled","ErrorModal","close","name","primary","onClick","formatNumber","str","res","match","String","integersAmount","length","i","j","blocksAmount","Math","ceil","start","end","substring","concat","StatusWrapper","Status","StatusIndicator","FieldRowWrapper","ColumnWrapper","FieldInfo","AddressWrapper","AddressTitle","AddressValue","FieldTitleWrapper","PaidByBadge","PaddedHeader","TransactionDetailsModal","source","useState","network","useWallet","transaction","useTransaction","signature","sourceTokenAccount","useTokenAccount","usePubkey","destinationTokenAccount","tokenAmount","useTokenAccountAmount","useEffect","type","trackEvent","sourceToken","destinationToken","date","dayjs","isShowFeeBadge","titleCase","title","width","height","borderRadius","symbol","address","size","prefix","value","className","classNames","error","isShowDetails","destination","shortAddress","renderFromTo","href","getExplorerUrl","target","rel","isCentered","lightGray","setShowDetails","state","StatusColors","WrapperModal","ProgressWrapper","Title","Desc","CloseWrapper","CloseIcon","Content","SendWrapper","ValueCurrency","ValueOriginal","SwapWrapper","SwapColumn","SwapInfo","SwapBlock","SwapIcon","SwapAmount","FieldsWrapper","FieldWrapper","FieldTitle","FieldValue","ShareIcon","ShareWrapper","Footer","ButtonExplorer","easing","BezierEasing","AnimatedDialogContent","animated","StyledDialogContent","props","mobile","Handle","Delimiter","IconStyled","Modal","children","isMobile","useIsMobile","location","useLocation","currentPath","useRef","doNotCloseOnPathChangeMobile","setIsOpen","config","useMemo","duration","t","from","transform","enter","leave","fadeTransition","useTransition","isOpen","useSpring","y","mass","tension","friction","bind","useDrag","set","item","style","n","description","noDelimiter","hasIcon","Boolean","iconName","footer","CancelIcon","ButtonCancel","hollow","WarningIcon","ErrorHint","noIcon","WrapperLabel","Input","EyeWrapper","EyeIcon","REGEX_PASSWORD","PasswordInput","isFocused","isError","isShowPassword","placeholder","onChange","e","onFocus","setIsFocused","onBlur","setIsShowPassword","ActionButton","ActionsMobileModal","layoutViewModel","history","useHistory","handleButtonClick","route","fromPage","pathname","icon","ActionRow","token","isMobilePopupChild","wallet","ChooseBuyTokenMobileModalViewModel","singleton","_wallets","_tokensRepository","solWallet","usdcWallet","solToken","usdcToken","makeObservable","observable","_setWallets","_getBuySelectionWallet","CryptoCurrency","this","addReaction","reaction","newSOLWallet","newUSDCWallet","cryptoCurrency","getWallets","find","mintAddress","getTokenWithMint","runInAction","_getToken","then","action","newSOLToken","newUSDCToken","ViewModel","ChooseBuyTokenMobileModal","observer","useViewModel","handleRowClick","newPath","push","zIndexes","ExplorerBlockLink","Address","ExternalIcon","TransactionID","transactionID","truncatingMiddle","numOfSymbolsRevealed","numOfSymbolsRevealedInSuffix","ProcessTransactionModalViewModel","injectable","_transactionHandler","rawTransaction","pendingTransaction","observingTransactionIndex","setTransaction","isSwapping","computed","getMainDescription","sendAndObserveTransaction","processingTransaction","PendingTransaction","transactionId","sentAt","Date","status","TransactionStatus","assert","isSwap","mainDescription","index","sendTransaction","unknownErrorInfo","SolanaSDKError","observeTransaction","HeaderLabel","viewModel","text","expr","info","originalText","TransactionStatusType","FeeRelayerError","ProcessTransaction","Error","ProgressIcon","ProgressLine","ProgressStub","BlockWrapper","ProgressView","isSending","isProcessing","isSuccess","newProgress","timerId","setInterval","setProgress","progress","clearTimeout","setTimeout","Section","ProcessTransactionModal","useLayoutEffect","handleCloseClick","showExplorerLink","List","Row","LoaderWrapper","RenBTCButton","buttonText","fee","totalFee","payingWallet","numberToString","maximumFractionDigits","handleClick","createRenBTC","disabled","isLoading","Loader","SelectorValue","TokenAvatarStyled","Fees","Top","Label","LabelWrapper","WalletSelectorContent","Defaults","ChooseWalletStyled","Create","iconBgClassName","position","selector","selectedWallet","onWalletChange","staticWallets","showOtherWallets","RenBTCAccountStatus","RenBTCStatusService","_feeRelayerAPIClient","_orcaSwap","_walletsRepository","_feeRelayer","_feeRelayerContextManager","_minRentExemption","_lamportsPerSignature","_rentExemptMinimum","feeRelayerAPIClient","FeeRelayerAPIClient","FeeRelayerContextManager","owner","provider","publicKey","solanaAPIClient","load","getMinimumBalanceForRentExemption","AccountInfo","getLamportsPerSignature","wallets","filter","lamports","gt","ZERO","Promise","all","map","w","getCreationFee","catch","group","walletsNew","zip","lte","isNativeSOL","sub","lt","_address","_mint","PublicKey","mint","associatedAccount","getAssociatedTokenAddressSync","SolanaSDKPublicKey","getCurrentContext","feePayer","feePayerAddress","preparing","prepareTransaction","instructions","SPLToken","updating","update","preparedTransaction","context","topUpAndRelayTransaction","TokenAccount","FeeRelayerConfiguration","operationType","StatsInfoOperationType","currency","toBase58","tx","waitForConfirmation","batchUpdate","string","pubkey","nativeWalletAddress","renBTCAddress","some","Wallet","Token","_mintAddress","feeAmount","FeeAmount","u64","accountBalances","feeCalculator","expectedFee","payingTokenMint","feeInSOL","calculateNeededTopUpAmount","calculateFeeInPayingToken","orcaSwap","payingFeeTokenMint","feeInToken","total","ReceiveBitcoinModalViewModel","_renBTCStatusService","_priceService","choosePayingWalletViewModel","accountStatus","payableWallets","feeInFiat","solanaPubkey","feeInText","reload","walletDidSelect","initialize","_bind","nativeWallet","getPayableWallets","payingWalletAvailable","topUpRequired","console","message","convertToBalance","decimals","price","currentPrice","createAccount","TopUp","LoaderWrapperStyled","ReceiveBitcoinModal","SelectListMobileModal","items","parsedTransactionStatusLabel","StatusType","parsedTransactionStatusIndicatorColor","TransactionModalViewModel","_pricesService","_nameService","_notificationService","_transaction","model","getUsername","nameService","username","mapTransaction","pricesService","_copy","keyPath","getAddress","undefined","getRawAddresses","to","copyToClipboardString","amounts","constructor","TransferInfo","tokens","rawAmount","usd","getAmountInCurrentFiat","amountInToken","fromAmount","sourceAmount","toAmount","destinationAmount","max","mapAmounts","imageType","amount","usdAmount","blockTime","format","addresses","getAddresses","mapFee","color","statusImage","fromOneToOne","oneImage","parsedTransactionIcon","transferType","TransferType","destinationAuthority","authority","getName","_name","withNameServiceDomain","transferAmount","swapFee","add","eqn","CopyIcon","CopyImage","Link","ExplorerIcon","SolanaExplorerLink","ModalTitle","TransactionImageViewStyled","AmountLabel","USDAmountLabel","BlockTimeLabel","FeeLabel","StatusLabel","TransactionModal","imageView","AmountSummaryView","amountInFiat","RecipientView","recipient","medium","SubTitle","ActionTitle","PasswordInputStyled","SendIcon","ConfirmSendModal","walletProviderInfo","tryUnlockSeedAndMnemonic","useTryUnlockSeedAndMnemonic","validatePassword","setHasError","isSecretKeyWallet","DEFAULT_WALLET_PROVIDERS","DefaultWalletType","isDisabled","password","setPassword","hasError","SectionPassword","ConfirmSwapModalViewModel","_swapViewModel","sourceWallet","destinationWallet","inputAmount","estimatedAmount","minimumReceiveAmount","exchangeRate","fees","slippage","getPrice","authenticateAndSwap","inputAmountString","inputAmountInFiatString","estimatedAmountString","receiveAtLeastString","receiveAtLeastInFiatString","totalFees","setSwapViewModel","priceInCurrentFiat","swapViewModel","SlippageView","DetailsView","totalFeesSymbol","AccordionTitle","titleBottomName","titleBottomValue","open","noContentPadding","RatesStackView","DetailFeesView","slippageView","WalletView","amountLabel","equityAmountLabel","ConfirmSwapModal","vm","flag","setIsDisabled","ArrowIconWrapper","ArrowIcon","ArrowDown","WalletIcon","InfoWrapper","InfoTitle","Username","To","InfoValue"],"sourceRoot":""}